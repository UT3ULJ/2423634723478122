
timer indikator.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000005b2  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  00000626  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000009  00800060  00800060  00000626  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000626  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000658  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000f8  00000000  00000000  00000694  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000198d  00000000  00000000  0000078c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000072f  00000000  00000000  00002119  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000b82  00000000  00000000  00002848  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000002ec  00000000  00000000  000033cc  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000051c  00000000  00000000  000036b8  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000150f  00000000  00000000  00003bd4  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000e8  00000000  00000000  000050e3  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	1c c0       	rjmp	.+56     	; 0x3a <__ctors_end>
   2:	2b c0       	rjmp	.+86     	; 0x5a <__bad_interrupt>
   4:	2a c0       	rjmp	.+84     	; 0x5a <__bad_interrupt>
   6:	29 c0       	rjmp	.+82     	; 0x5a <__bad_interrupt>
   8:	28 c0       	rjmp	.+80     	; 0x5a <__bad_interrupt>
   a:	27 c0       	rjmp	.+78     	; 0x5a <__bad_interrupt>
   c:	29 c1       	rjmp	.+594    	; 0x260 <__vector_6>
   e:	25 c0       	rjmp	.+74     	; 0x5a <__bad_interrupt>
  10:	24 c0       	rjmp	.+72     	; 0x5a <__bad_interrupt>
  12:	23 c0       	rjmp	.+70     	; 0x5a <__bad_interrupt>
  14:	22 c0       	rjmp	.+68     	; 0x5a <__bad_interrupt>
  16:	21 c0       	rjmp	.+66     	; 0x5a <__bad_interrupt>
  18:	20 c0       	rjmp	.+64     	; 0x5a <__bad_interrupt>
  1a:	1f c0       	rjmp	.+62     	; 0x5a <__bad_interrupt>
  1c:	1e c0       	rjmp	.+60     	; 0x5a <__bad_interrupt>
  1e:	1d c0       	rjmp	.+58     	; 0x5a <__bad_interrupt>
  20:	1c c0       	rjmp	.+56     	; 0x5a <__bad_interrupt>
  22:	1b c0       	rjmp	.+54     	; 0x5a <__bad_interrupt>
  24:	1a c0       	rjmp	.+52     	; 0x5a <__bad_interrupt>
  26:	f1 c0       	rjmp	.+482    	; 0x20a <segchar+0x10>
  28:	f2 c0       	rjmp	.+484    	; 0x20e <segchar+0x14>
  2a:	f4 c0       	rjmp	.+488    	; 0x214 <segchar+0x1a>
  2c:	f6 c0       	rjmp	.+492    	; 0x21a <segchar+0x20>
  2e:	f8 c0       	rjmp	.+496    	; 0x220 <segchar+0x26>
  30:	fa c0       	rjmp	.+500    	; 0x226 <segchar+0x2c>
  32:	fc c0       	rjmp	.+504    	; 0x22c <segchar+0x32>
  34:	fe c0       	rjmp	.+508    	; 0x232 <segchar+0x38>
  36:	00 c1       	rjmp	.+512    	; 0x238 <segchar+0x3e>
  38:	02 c1       	rjmp	.+516    	; 0x23e <segchar+0x44>

0000003a <__ctors_end>:
  3a:	11 24       	eor	r1, r1
  3c:	1f be       	out	0x3f, r1	; 63
  3e:	cf e5       	ldi	r28, 0x5F	; 95
  40:	d4 e0       	ldi	r29, 0x04	; 4
  42:	de bf       	out	0x3e, r29	; 62
  44:	cd bf       	out	0x3d, r28	; 61

00000046 <__do_clear_bss>:
  46:	20 e0       	ldi	r18, 0x00	; 0
  48:	a0 e6       	ldi	r26, 0x60	; 96
  4a:	b0 e0       	ldi	r27, 0x00	; 0
  4c:	01 c0       	rjmp	.+2      	; 0x50 <.do_clear_bss_start>

0000004e <.do_clear_bss_loop>:
  4e:	1d 92       	st	X+, r1

00000050 <.do_clear_bss_start>:
  50:	a9 36       	cpi	r26, 0x69	; 105
  52:	b2 07       	cpc	r27, r18
  54:	e1 f7       	brne	.-8      	; 0x4e <.do_clear_bss_loop>
  56:	2e d2       	rcall	.+1116   	; 0x4b4 <main>
  58:	aa c2       	rjmp	.+1364   	; 0x5ae <_exit>

0000005a <__bad_interrupt>:
  5a:	d2 cf       	rjmp	.-92     	; 0x0 <__vectors>

0000005c <i2c_stop>:
		bcd = (dig1<<count1)|bcd;
		count1 += 4;
	}

	return bcd;
}
  5c:	a5 9a       	sbi	0x14, 5	; 20
  5e:	ad 98       	cbi	0x15, 5	; 21
  60:	8a e1       	ldi	r24, 0x1A	; 26
  62:	8a 95       	dec	r24
  64:	f1 f7       	brne	.-4      	; 0x62 <i2c_stop+0x6>
  66:	00 c0       	rjmp	.+0      	; 0x68 <i2c_stop+0xc>
  68:	a4 9a       	sbi	0x14, 4	; 20
  6a:	ac 98       	cbi	0x15, 4	; 21
  6c:	9a e1       	ldi	r25, 0x1A	; 26
  6e:	9a 95       	dec	r25
  70:	f1 f7       	brne	.-4      	; 0x6e <i2c_stop+0x12>
  72:	00 c0       	rjmp	.+0      	; 0x74 <i2c_stop+0x18>
  74:	a5 98       	cbi	0x14, 5	; 20
  76:	ad 9a       	sbi	0x15, 5	; 21
  78:	8a e1       	ldi	r24, 0x1A	; 26
  7a:	8a 95       	dec	r24
  7c:	f1 f7       	brne	.-4      	; 0x7a <i2c_stop+0x1e>
  7e:	00 c0       	rjmp	.+0      	; 0x80 <i2c_stop+0x24>
  80:	a4 98       	cbi	0x14, 4	; 20
  82:	ac 9a       	sbi	0x15, 4	; 21
  84:	9a e1       	ldi	r25, 0x1A	; 26
  86:	9a 95       	dec	r25
  88:	f1 f7       	brne	.-4      	; 0x86 <i2c_stop+0x2a>
  8a:	00 c0       	rjmp	.+0      	; 0x8c <i2c_stop+0x30>
  8c:	9c 99       	sbic	0x13, 4	; 19
  8e:	02 c0       	rjmp	.+4      	; 0x94 <i2c_stop+0x38>
  90:	82 e0       	ldi	r24, 0x02	; 2
  92:	01 c0       	rjmp	.+2      	; 0x96 <i2c_stop+0x3a>
  94:	80 e0       	ldi	r24, 0x00	; 0
  96:	9d 9b       	sbis	0x13, 5	; 19
  98:	8f 5f       	subi	r24, 0xFF	; 255
  9a:	9a e1       	ldi	r25, 0x1A	; 26
  9c:	9a 95       	dec	r25
  9e:	f1 f7       	brne	.-4      	; 0x9c <i2c_stop+0x40>
  a0:	00 c0       	rjmp	.+0      	; 0xa2 <i2c_stop+0x46>
  a2:	9a e1       	ldi	r25, 0x1A	; 26
  a4:	9a 95       	dec	r25
  a6:	f1 f7       	brne	.-4      	; 0xa4 <i2c_stop+0x48>
  a8:	00 c0       	rjmp	.+0      	; 0xaa <i2c_stop+0x4e>
  aa:	9a e1       	ldi	r25, 0x1A	; 26
  ac:	9a 95       	dec	r25
  ae:	f1 f7       	brne	.-4      	; 0xac <i2c_stop+0x50>
  b0:	00 c0       	rjmp	.+0      	; 0xb2 <i2c_stop+0x56>
  b2:	9a e1       	ldi	r25, 0x1A	; 26
  b4:	9a 95       	dec	r25
  b6:	f1 f7       	brne	.-4      	; 0xb4 <i2c_stop+0x58>
  b8:	00 c0       	rjmp	.+0      	; 0xba <i2c_stop+0x5e>
  ba:	08 95       	ret

000000bc <i2c_start>:
  bc:	a4 9a       	sbi	0x14, 4	; 20
  be:	ac 98       	cbi	0x15, 4	; 21
  c0:	8a e1       	ldi	r24, 0x1A	; 26
  c2:	8a 95       	dec	r24
  c4:	f1 f7       	brne	.-4      	; 0xc2 <i2c_start+0x6>
  c6:	00 c0       	rjmp	.+0      	; 0xc8 <i2c_start+0xc>
  c8:	a5 9a       	sbi	0x14, 5	; 20
  ca:	ad 98       	cbi	0x15, 5	; 21
  cc:	8a e1       	ldi	r24, 0x1A	; 26
  ce:	8a 95       	dec	r24
  d0:	f1 f7       	brne	.-4      	; 0xce <i2c_start+0x12>
  d2:	00 c0       	rjmp	.+0      	; 0xd4 <i2c_start+0x18>
  d4:	08 95       	ret

000000d6 <i2c_restart>:
  d6:	a4 98       	cbi	0x14, 4	; 20
  d8:	ac 9a       	sbi	0x15, 4	; 21
  da:	8a e1       	ldi	r24, 0x1A	; 26
  dc:	8a 95       	dec	r24
  de:	f1 f7       	brne	.-4      	; 0xdc <i2c_restart+0x6>
  e0:	00 c0       	rjmp	.+0      	; 0xe2 <i2c_restart+0xc>
  e2:	a5 98       	cbi	0x14, 5	; 20
  e4:	ad 9a       	sbi	0x15, 5	; 21
  e6:	8a e1       	ldi	r24, 0x1A	; 26
  e8:	8a 95       	dec	r24
  ea:	f1 f7       	brne	.-4      	; 0xe8 <i2c_restart+0x12>
  ec:	00 c0       	rjmp	.+0      	; 0xee <i2c_restart+0x18>
  ee:	a4 9a       	sbi	0x14, 4	; 20
  f0:	ac 98       	cbi	0x15, 4	; 21
  f2:	8a e1       	ldi	r24, 0x1A	; 26
  f4:	8a 95       	dec	r24
  f6:	f1 f7       	brne	.-4      	; 0xf4 <i2c_restart+0x1e>
  f8:	00 c0       	rjmp	.+0      	; 0xfa <i2c_restart+0x24>
  fa:	a5 9a       	sbi	0x14, 5	; 20
  fc:	ad 98       	cbi	0x15, 5	; 21
  fe:	8a e1       	ldi	r24, 0x1A	; 26
 100:	8a 95       	dec	r24
 102:	f1 f7       	brne	.-4      	; 0x100 <i2c_restart+0x2a>
 104:	00 c0       	rjmp	.+0      	; 0x106 <i2c_restart+0x30>
 106:	08 95       	ret

00000108 <i2c_init>:
 108:	a4 98       	cbi	0x14, 4	; 20
 10a:	ac 9a       	sbi	0x15, 4	; 21
 10c:	a5 98       	cbi	0x14, 5	; 20
 10e:	ad 9a       	sbi	0x15, 5	; 21
 110:	a5 df       	rcall	.-182    	; 0x5c <i2c_stop>
 112:	08 95       	ret

00000114 <i2c_send_byte>:
 114:	98 e0       	ldi	r25, 0x08	; 8
 116:	88 23       	and	r24, r24
 118:	1c f0       	brlt	.+6      	; 0x120 <i2c_send_byte+0xc>
 11a:	a4 9a       	sbi	0x14, 4	; 20
 11c:	ac 98       	cbi	0x15, 4	; 21
 11e:	02 c0       	rjmp	.+4      	; 0x124 <i2c_send_byte+0x10>
 120:	a4 98       	cbi	0x14, 4	; 20
 122:	ac 9a       	sbi	0x15, 4	; 21
 124:	2a e1       	ldi	r18, 0x1A	; 26
 126:	2a 95       	dec	r18
 128:	f1 f7       	brne	.-4      	; 0x126 <i2c_send_byte+0x12>
 12a:	00 c0       	rjmp	.+0      	; 0x12c <i2c_send_byte+0x18>
 12c:	a5 98       	cbi	0x14, 5	; 20
 12e:	ad 9a       	sbi	0x15, 5	; 21
 130:	2a e1       	ldi	r18, 0x1A	; 26
 132:	2a 95       	dec	r18
 134:	f1 f7       	brne	.-4      	; 0x132 <i2c_send_byte+0x1e>
 136:	00 c0       	rjmp	.+0      	; 0x138 <i2c_send_byte+0x24>
 138:	a5 9a       	sbi	0x14, 5	; 20
 13a:	ad 98       	cbi	0x15, 5	; 21
 13c:	88 0f       	add	r24, r24
 13e:	91 50       	subi	r25, 0x01	; 1
 140:	51 f7       	brne	.-44     	; 0x116 <i2c_send_byte+0x2>
 142:	a4 98       	cbi	0x14, 4	; 20
 144:	ac 9a       	sbi	0x15, 4	; 21
 146:	8a e1       	ldi	r24, 0x1A	; 26
 148:	8a 95       	dec	r24
 14a:	f1 f7       	brne	.-4      	; 0x148 <i2c_send_byte+0x34>
 14c:	00 c0       	rjmp	.+0      	; 0x14e <i2c_send_byte+0x3a>
 14e:	a5 98       	cbi	0x14, 5	; 20
 150:	ad 9a       	sbi	0x15, 5	; 21
 152:	2a e1       	ldi	r18, 0x1A	; 26
 154:	2a 95       	dec	r18
 156:	f1 f7       	brne	.-4      	; 0x154 <i2c_send_byte+0x40>
 158:	00 c0       	rjmp	.+0      	; 0x15a <i2c_send_byte+0x46>
 15a:	83 b3       	in	r24, 0x13	; 19
 15c:	a5 9a       	sbi	0x14, 5	; 20
 15e:	ad 98       	cbi	0x15, 5	; 21
 160:	82 95       	swap	r24
 162:	81 70       	andi	r24, 0x01	; 1
 164:	08 95       	ret

00000166 <i2c_read_byte>:
 166:	28 2f       	mov	r18, r24
 168:	a4 98       	cbi	0x14, 4	; 20
 16a:	ac 9a       	sbi	0x15, 4	; 21
 16c:	98 e0       	ldi	r25, 0x08	; 8
 16e:	80 e0       	ldi	r24, 0x00	; 0
 170:	88 0f       	add	r24, r24
 172:	a5 98       	cbi	0x14, 5	; 20
 174:	ad 9a       	sbi	0x15, 5	; 21
 176:	3a e1       	ldi	r19, 0x1A	; 26
 178:	3a 95       	dec	r19
 17a:	f1 f7       	brne	.-4      	; 0x178 <i2c_read_byte+0x12>
 17c:	00 c0       	rjmp	.+0      	; 0x17e <i2c_read_byte+0x18>
 17e:	9c 99       	sbic	0x13, 4	; 19
 180:	81 60       	ori	r24, 0x01	; 1
 182:	a5 9a       	sbi	0x14, 5	; 20
 184:	ad 98       	cbi	0x15, 5	; 21
 186:	3a e1       	ldi	r19, 0x1A	; 26
 188:	3a 95       	dec	r19
 18a:	f1 f7       	brne	.-4      	; 0x188 <i2c_read_byte+0x22>
 18c:	00 c0       	rjmp	.+0      	; 0x18e <i2c_read_byte+0x28>
 18e:	91 50       	subi	r25, 0x01	; 1
 190:	79 f7       	brne	.-34     	; 0x170 <i2c_read_byte+0xa>
 192:	21 11       	cpse	r18, r1
 194:	03 c0       	rjmp	.+6      	; 0x19c <i2c_read_byte+0x36>
 196:	a4 9a       	sbi	0x14, 4	; 20
 198:	ac 98       	cbi	0x15, 4	; 21
 19a:	02 c0       	rjmp	.+4      	; 0x1a0 <i2c_read_byte+0x3a>
 19c:	a4 98       	cbi	0x14, 4	; 20
 19e:	ac 9a       	sbi	0x15, 4	; 21
 1a0:	9a e1       	ldi	r25, 0x1A	; 26
 1a2:	9a 95       	dec	r25
 1a4:	f1 f7       	brne	.-4      	; 0x1a2 <i2c_read_byte+0x3c>
 1a6:	00 c0       	rjmp	.+0      	; 0x1a8 <i2c_read_byte+0x42>
 1a8:	a5 98       	cbi	0x14, 5	; 20
 1aa:	ad 9a       	sbi	0x15, 5	; 21
 1ac:	3a e1       	ldi	r19, 0x1A	; 26
 1ae:	3a 95       	dec	r19
 1b0:	f1 f7       	brne	.-4      	; 0x1ae <i2c_read_byte+0x48>
 1b2:	00 c0       	rjmp	.+0      	; 0x1b4 <i2c_read_byte+0x4e>
 1b4:	a5 9a       	sbi	0x14, 5	; 20
 1b6:	ad 98       	cbi	0x15, 5	; 21
 1b8:	9a e1       	ldi	r25, 0x1A	; 26
 1ba:	9a 95       	dec	r25
 1bc:	f1 f7       	brne	.-4      	; 0x1ba <i2c_read_byte+0x54>
 1be:	00 c0       	rjmp	.+0      	; 0x1c0 <i2c_read_byte+0x5a>
 1c0:	a4 98       	cbi	0x14, 4	; 20
 1c2:	ac 9a       	sbi	0x15, 4	; 21
 1c4:	08 95       	ret

000001c6 <ds3231_init>:
 1c6:	cf 93       	push	r28
 1c8:	9f df       	rcall	.-194    	; 0x108 <i2c_init>
 1ca:	78 df       	rcall	.-272    	; 0xbc <i2c_start>
 1cc:	80 ed       	ldi	r24, 0xD0	; 208
 1ce:	a2 df       	rcall	.-188    	; 0x114 <i2c_send_byte>
 1d0:	8e e0       	ldi	r24, 0x0E	; 14
 1d2:	a0 df       	rcall	.-192    	; 0x114 <i2c_send_byte>
 1d4:	80 df       	rcall	.-256    	; 0xd6 <i2c_restart>
 1d6:	81 ed       	ldi	r24, 0xD1	; 209
 1d8:	9d df       	rcall	.-198    	; 0x114 <i2c_send_byte>
 1da:	81 e0       	ldi	r24, 0x01	; 1
 1dc:	c4 df       	rcall	.-120    	; 0x166 <i2c_read_byte>
 1de:	c8 2f       	mov	r28, r24
 1e0:	3d df       	rcall	.-390    	; 0x5c <i2c_stop>
 1e2:	6c df       	rcall	.-296    	; 0xbc <i2c_start>
 1e4:	80 ed       	ldi	r24, 0xD0	; 208
 1e6:	96 df       	rcall	.-212    	; 0x114 <i2c_send_byte>
 1e8:	8e e0       	ldi	r24, 0x0E	; 14
 1ea:	94 df       	rcall	.-216    	; 0x114 <i2c_send_byte>
 1ec:	74 df       	rcall	.-280    	; 0xd6 <i2c_restart>
 1ee:	8c 2f       	mov	r24, r28
 1f0:	8f 77       	andi	r24, 0x7F	; 127
 1f2:	90 df       	rcall	.-224    	; 0x114 <i2c_send_byte>
 1f4:	33 df       	rcall	.-410    	; 0x5c <i2c_stop>
 1f6:	cf 91       	pop	r28
 1f8:	08 95       	ret

000001fa <segchar>:
 1fa:	90 e0       	ldi	r25, 0x00	; 0
 1fc:	8a 30       	cpi	r24, 0x0A	; 10
 1fe:	91 05       	cpc	r25, r1
 200:	00 f5       	brcc	.+64     	; 0x242 <segchar+0x48>
 202:	fc 01       	movw	r30, r24
 204:	ed 5e       	subi	r30, 0xED	; 237
 206:	ff 4f       	sbci	r31, 0xFF	; 255
 208:	09 94       	ijmp
 20a:	12 ba       	out	0x12, r1	; 18
 20c:	08 95       	ret
 20e:	81 e0       	ldi	r24, 0x01	; 1
 210:	82 bb       	out	0x12, r24	; 18
 212:	08 95       	ret
 214:	82 e0       	ldi	r24, 0x02	; 2
 216:	82 bb       	out	0x12, r24	; 18
 218:	08 95       	ret
 21a:	83 e0       	ldi	r24, 0x03	; 3
 21c:	82 bb       	out	0x12, r24	; 18
 21e:	08 95       	ret
 220:	84 e0       	ldi	r24, 0x04	; 4
 222:	82 bb       	out	0x12, r24	; 18
 224:	08 95       	ret
 226:	85 e0       	ldi	r24, 0x05	; 5
 228:	82 bb       	out	0x12, r24	; 18
 22a:	08 95       	ret
 22c:	86 e0       	ldi	r24, 0x06	; 6
 22e:	82 bb       	out	0x12, r24	; 18
 230:	08 95       	ret
 232:	87 e0       	ldi	r24, 0x07	; 7
 234:	82 bb       	out	0x12, r24	; 18
 236:	08 95       	ret
 238:	88 e0       	ldi	r24, 0x08	; 8
 23a:	82 bb       	out	0x12, r24	; 18
 23c:	08 95       	ret
 23e:	89 e0       	ldi	r24, 0x09	; 9
 240:	82 bb       	out	0x12, r24	; 18
 242:	08 95       	ret

00000244 <timer_ini>:
 244:	8e b5       	in	r24, 0x2e	; 46
 246:	88 60       	ori	r24, 0x08	; 8
 248:	8e bd       	out	0x2e, r24	; 46
 24a:	89 b7       	in	r24, 0x39	; 57
 24c:	80 61       	ori	r24, 0x10	; 16
 24e:	89 bf       	out	0x39, r24	; 57
 250:	8a e7       	ldi	r24, 0x7A	; 122
 252:	8b bd       	out	0x2b, r24	; 43
 254:	82 e1       	ldi	r24, 0x12	; 18
 256:	8a bd       	out	0x2a, r24	; 42
 258:	8e b5       	in	r24, 0x2e	; 46
 25a:	81 60       	ori	r24, 0x01	; 1
 25c:	8e bd       	out	0x2e, r24	; 46
 25e:	08 95       	ret

00000260 <__vector_6>:


//-----------------------------------------//

ISR (TIMER1_COMPA_vect)
{
 260:	1f 92       	push	r1
 262:	0f 92       	push	r0
 264:	0f b6       	in	r0, 0x3f	; 63
 266:	0f 92       	push	r0
 268:	11 24       	eor	r1, r1
 26a:	2f 93       	push	r18
 26c:	3f 93       	push	r19
 26e:	4f 93       	push	r20
 270:	5f 93       	push	r21
 272:	6f 93       	push	r22
 274:	7f 93       	push	r23
 276:	8f 93       	push	r24
 278:	9f 93       	push	r25
 27a:	af 93       	push	r26
 27c:	bf 93       	push	r27
 27e:	ef 93       	push	r30
 280:	ff 93       	push	r31
	if (n_count==0) {PORTC&=~(1<<PORTC0);PORTC&=~(1<<PORTC1);PORTC&=~(1<<PORTC2);PORTC&=~(1<<PORTC3);PORTB&=~(1<<PORTB0);PORTB|=(1<<PORTB1); segchar(R1);}
 282:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <_edata>
 286:	81 11       	cpse	r24, r1
 288:	09 c0       	rjmp	.+18     	; 0x29c <__vector_6+0x3c>
 28a:	a8 98       	cbi	0x15, 0	; 21
 28c:	a9 98       	cbi	0x15, 1	; 21
 28e:	aa 98       	cbi	0x15, 2	; 21
 290:	ab 98       	cbi	0x15, 3	; 21
 292:	c0 98       	cbi	0x18, 0	; 24
 294:	c1 9a       	sbi	0x18, 1	; 24
 296:	80 91 66 00 	lds	r24, 0x0066	; 0x800066 <R1>
 29a:	af df       	rcall	.-162    	; 0x1fa <segchar>
	if (n_count==1) {PORTC&=~(1<<PORTC0);PORTC&=~(1<<PORTC1);PORTC&=~(1<<PORTC2);PORTC&=~(1<<PORTC3);PORTB&=~(1<<PORTB1);PORTB|=(1<<PORTB0); segchar(R2);}
 29c:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <_edata>
 2a0:	81 30       	cpi	r24, 0x01	; 1
 2a2:	49 f4       	brne	.+18     	; 0x2b6 <__vector_6+0x56>
 2a4:	a8 98       	cbi	0x15, 0	; 21
 2a6:	a9 98       	cbi	0x15, 1	; 21
 2a8:	aa 98       	cbi	0x15, 2	; 21
 2aa:	ab 98       	cbi	0x15, 3	; 21
 2ac:	c1 98       	cbi	0x18, 1	; 24
 2ae:	c0 9a       	sbi	0x18, 0	; 24
 2b0:	80 91 65 00 	lds	r24, 0x0065	; 0x800065 <R2>
 2b4:	a2 df       	rcall	.-188    	; 0x1fa <segchar>
	if (n_count==2) {PORTC&=~(1<<PORTC0);PORTC&=~(1<<PORTC1);PORTC&=~(1<<PORTC2);PORTB&=~(1<<PORTB0);PORTB&=~(1<<PORTB1);PORTC|=(1<<PORTC3); segchar(R3);}
 2b6:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <_edata>
 2ba:	82 30       	cpi	r24, 0x02	; 2
 2bc:	49 f4       	brne	.+18     	; 0x2d0 <__vector_6+0x70>
 2be:	a8 98       	cbi	0x15, 0	; 21
 2c0:	a9 98       	cbi	0x15, 1	; 21
 2c2:	aa 98       	cbi	0x15, 2	; 21
 2c4:	c0 98       	cbi	0x18, 0	; 24
 2c6:	c1 98       	cbi	0x18, 1	; 24
 2c8:	ab 9a       	sbi	0x15, 3	; 21
 2ca:	80 91 64 00 	lds	r24, 0x0064	; 0x800064 <R3>
 2ce:	95 df       	rcall	.-214    	; 0x1fa <segchar>
	if (n_count==3)	{PORTC&=~(1<<PORTC0);PORTC&=~(1<<PORTC1);PORTC&=~(1<<PORTC3);PORTB&=~(1<<PORTB0);PORTB&=~(1<<PORTB1);PORTC|=(1<<PORTC2); segchar(R4);}
 2d0:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <_edata>
 2d4:	83 30       	cpi	r24, 0x03	; 3
 2d6:	49 f4       	brne	.+18     	; 0x2ea <__vector_6+0x8a>
 2d8:	a8 98       	cbi	0x15, 0	; 21
 2da:	a9 98       	cbi	0x15, 1	; 21
 2dc:	ab 98       	cbi	0x15, 3	; 21
 2de:	c0 98       	cbi	0x18, 0	; 24
 2e0:	c1 98       	cbi	0x18, 1	; 24
 2e2:	aa 9a       	sbi	0x15, 2	; 21
 2e4:	80 91 63 00 	lds	r24, 0x0063	; 0x800063 <R4>
 2e8:	88 df       	rcall	.-240    	; 0x1fa <segchar>
	if (n_count==4)	{PORTC&=~(1<<PORTC0);PORTC&=~(1<<PORTC2);PORTC&=~(1<<PORTC3);PORTB&=~(1<<PORTB0);PORTB&=~(1<<PORTB1);PORTC|=(1<<PORTC1); segchar(R5);}
 2ea:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <_edata>
 2ee:	84 30       	cpi	r24, 0x04	; 4
 2f0:	49 f4       	brne	.+18     	; 0x304 <__vector_6+0xa4>
 2f2:	a8 98       	cbi	0x15, 0	; 21
 2f4:	aa 98       	cbi	0x15, 2	; 21
 2f6:	ab 98       	cbi	0x15, 3	; 21
 2f8:	c0 98       	cbi	0x18, 0	; 24
 2fa:	c1 98       	cbi	0x18, 1	; 24
 2fc:	a9 9a       	sbi	0x15, 1	; 21
 2fe:	80 91 62 00 	lds	r24, 0x0062	; 0x800062 <R5>
 302:	7b df       	rcall	.-266    	; 0x1fa <segchar>
	if (n_count==5)	{PORTC&=~(1<<PORTC1);PORTC&=~(1<<PORTC2);PORTC&=~(1<<PORTC3);PORTB&=~(1<<PORTB0);PORTB&=~(1<<PORTB1);PORTC|=(1<<PORTC0); segchar(R6);}
 304:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <_edata>
 308:	85 30       	cpi	r24, 0x05	; 5
 30a:	49 f4       	brne	.+18     	; 0x31e <__vector_6+0xbe>
 30c:	a9 98       	cbi	0x15, 1	; 21
 30e:	aa 98       	cbi	0x15, 2	; 21
 310:	ab 98       	cbi	0x15, 3	; 21
 312:	c0 98       	cbi	0x18, 0	; 24
 314:	c1 98       	cbi	0x18, 1	; 24
 316:	a8 9a       	sbi	0x15, 0	; 21
 318:	80 91 61 00 	lds	r24, 0x0061	; 0x800061 <R6>
 31c:	6e df       	rcall	.-292    	; 0x1fa <segchar>
	n_count++;
 31e:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <_edata>
 322:	8f 5f       	subi	r24, 0xFF	; 255
	if (n_count>5) n_count=0;
 324:	86 30       	cpi	r24, 0x06	; 6
 326:	18 f4       	brcc	.+6      	; 0x32e <__vector_6+0xce>
	if (n_count==1) {PORTC&=~(1<<PORTC0);PORTC&=~(1<<PORTC1);PORTC&=~(1<<PORTC2);PORTC&=~(1<<PORTC3);PORTB&=~(1<<PORTB1);PORTB|=(1<<PORTB0); segchar(R2);}
	if (n_count==2) {PORTC&=~(1<<PORTC0);PORTC&=~(1<<PORTC1);PORTC&=~(1<<PORTC2);PORTB&=~(1<<PORTB0);PORTB&=~(1<<PORTB1);PORTC|=(1<<PORTC3); segchar(R3);}
	if (n_count==3)	{PORTC&=~(1<<PORTC0);PORTC&=~(1<<PORTC1);PORTC&=~(1<<PORTC3);PORTB&=~(1<<PORTB0);PORTB&=~(1<<PORTB1);PORTC|=(1<<PORTC2); segchar(R4);}
	if (n_count==4)	{PORTC&=~(1<<PORTC0);PORTC&=~(1<<PORTC2);PORTC&=~(1<<PORTC3);PORTB&=~(1<<PORTB0);PORTB&=~(1<<PORTB1);PORTC|=(1<<PORTC1); segchar(R5);}
	if (n_count==5)	{PORTC&=~(1<<PORTC1);PORTC&=~(1<<PORTC2);PORTC&=~(1<<PORTC3);PORTB&=~(1<<PORTB0);PORTB&=~(1<<PORTB1);PORTC|=(1<<PORTC0); segchar(R6);}
	n_count++;
 328:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <_edata>
 32c:	02 c0       	rjmp	.+4      	; 0x332 <__vector_6+0xd2>
	if (n_count>5) n_count=0;
 32e:	10 92 60 00 	sts	0x0060, r1	; 0x800060 <_edata>
	
}
 332:	ff 91       	pop	r31
 334:	ef 91       	pop	r30
 336:	bf 91       	pop	r27
 338:	af 91       	pop	r26
 33a:	9f 91       	pop	r25
 33c:	8f 91       	pop	r24
 33e:	7f 91       	pop	r23
 340:	6f 91       	pop	r22
 342:	5f 91       	pop	r21
 344:	4f 91       	pop	r20
 346:	3f 91       	pop	r19
 348:	2f 91       	pop	r18
 34a:	0f 90       	pop	r0
 34c:	0f be       	out	0x3f, r0	; 63
 34e:	0f 90       	pop	r0
 350:	1f 90       	pop	r1
 352:	18 95       	reti

00000354 <ledprint>:


void ledprint(unsigned int number)
{	
 354:	ac 01       	movw	r20, r24
	cli();
 356:	f8 94       	cli
	R1 = number%10;
 358:	9c 01       	movw	r18, r24
 35a:	ad ec       	ldi	r26, 0xCD	; 205
 35c:	bc ec       	ldi	r27, 0xCC	; 204
 35e:	f9 d0       	rcall	.+498    	; 0x552 <__umulhisi3>
 360:	96 95       	lsr	r25
 362:	87 95       	ror	r24
 364:	96 95       	lsr	r25
 366:	87 95       	ror	r24
 368:	96 95       	lsr	r25
 36a:	87 95       	ror	r24
 36c:	9c 01       	movw	r18, r24
 36e:	22 0f       	add	r18, r18
 370:	33 1f       	adc	r19, r19
 372:	88 0f       	add	r24, r24
 374:	99 1f       	adc	r25, r25
 376:	88 0f       	add	r24, r24
 378:	99 1f       	adc	r25, r25
 37a:	88 0f       	add	r24, r24
 37c:	99 1f       	adc	r25, r25
 37e:	82 0f       	add	r24, r18
 380:	93 1f       	adc	r25, r19
 382:	9a 01       	movw	r18, r20
 384:	28 1b       	sub	r18, r24
 386:	39 0b       	sbc	r19, r25
 388:	20 93 66 00 	sts	0x0066, r18	; 0x800066 <R1>
	R2 = number%100/10;
 38c:	9a 01       	movw	r18, r20
 38e:	36 95       	lsr	r19
 390:	27 95       	ror	r18
 392:	36 95       	lsr	r19
 394:	27 95       	ror	r18
 396:	ab e7       	ldi	r26, 0x7B	; 123
 398:	b4 e1       	ldi	r27, 0x14	; 20
 39a:	db d0       	rcall	.+438    	; 0x552 <__umulhisi3>
 39c:	96 95       	lsr	r25
 39e:	87 95       	ror	r24
 3a0:	64 e6       	ldi	r22, 0x64	; 100
 3a2:	68 9f       	mul	r22, r24
 3a4:	90 01       	movw	r18, r0
 3a6:	69 9f       	mul	r22, r25
 3a8:	30 0d       	add	r19, r0
 3aa:	11 24       	eor	r1, r1
 3ac:	ca 01       	movw	r24, r20
 3ae:	82 1b       	sub	r24, r18
 3b0:	93 0b       	sbc	r25, r19
 3b2:	9c 01       	movw	r18, r24
 3b4:	ad ec       	ldi	r26, 0xCD	; 205
 3b6:	bc ec       	ldi	r27, 0xCC	; 204
 3b8:	cc d0       	rcall	.+408    	; 0x552 <__umulhisi3>
 3ba:	96 95       	lsr	r25
 3bc:	87 95       	ror	r24
 3be:	96 95       	lsr	r25
 3c0:	87 95       	ror	r24
 3c2:	96 95       	lsr	r25
 3c4:	87 95       	ror	r24
 3c6:	80 93 65 00 	sts	0x0065, r24	; 0x800065 <R2>
	R3 = number%1000/100;
 3ca:	9a 01       	movw	r18, r20
 3cc:	36 95       	lsr	r19
 3ce:	27 95       	ror	r18
 3d0:	36 95       	lsr	r19
 3d2:	27 95       	ror	r18
 3d4:	36 95       	lsr	r19
 3d6:	27 95       	ror	r18
 3d8:	a5 ec       	ldi	r26, 0xC5	; 197
 3da:	b0 e2       	ldi	r27, 0x20	; 32
 3dc:	ba d0       	rcall	.+372    	; 0x552 <__umulhisi3>
 3de:	92 95       	swap	r25
 3e0:	82 95       	swap	r24
 3e2:	8f 70       	andi	r24, 0x0F	; 15
 3e4:	89 27       	eor	r24, r25
 3e6:	9f 70       	andi	r25, 0x0F	; 15
 3e8:	89 27       	eor	r24, r25
 3ea:	68 ee       	ldi	r22, 0xE8	; 232
 3ec:	73 e0       	ldi	r23, 0x03	; 3
 3ee:	86 9f       	mul	r24, r22
 3f0:	90 01       	movw	r18, r0
 3f2:	87 9f       	mul	r24, r23
 3f4:	30 0d       	add	r19, r0
 3f6:	96 9f       	mul	r25, r22
 3f8:	30 0d       	add	r19, r0
 3fa:	11 24       	eor	r1, r1
 3fc:	ca 01       	movw	r24, r20
 3fe:	82 1b       	sub	r24, r18
 400:	93 0b       	sbc	r25, r19
 402:	9c 01       	movw	r18, r24
 404:	36 95       	lsr	r19
 406:	27 95       	ror	r18
 408:	36 95       	lsr	r19
 40a:	27 95       	ror	r18
 40c:	ab e7       	ldi	r26, 0x7B	; 123
 40e:	b4 e1       	ldi	r27, 0x14	; 20
 410:	a0 d0       	rcall	.+320    	; 0x552 <__umulhisi3>
 412:	96 95       	lsr	r25
 414:	87 95       	ror	r24
 416:	80 93 64 00 	sts	0x0064, r24	; 0x800064 <R3>
	R4 = number%10000/1000;
 41a:	9a 01       	movw	r18, r20
 41c:	32 95       	swap	r19
 41e:	22 95       	swap	r18
 420:	2f 70       	andi	r18, 0x0F	; 15
 422:	23 27       	eor	r18, r19
 424:	3f 70       	andi	r19, 0x0F	; 15
 426:	23 27       	eor	r18, r19
 428:	a7 e4       	ldi	r26, 0x47	; 71
 42a:	b3 e0       	ldi	r27, 0x03	; 3
 42c:	92 d0       	rcall	.+292    	; 0x552 <__umulhisi3>
 42e:	fc 01       	movw	r30, r24
 430:	f6 95       	lsr	r31
 432:	e7 95       	ror	r30
 434:	f6 95       	lsr	r31
 436:	e7 95       	ror	r30
 438:	f6 95       	lsr	r31
 43a:	e7 95       	ror	r30
 43c:	20 e1       	ldi	r18, 0x10	; 16
 43e:	37 e2       	ldi	r19, 0x27	; 39
 440:	e2 9f       	mul	r30, r18
 442:	c0 01       	movw	r24, r0
 444:	e3 9f       	mul	r30, r19
 446:	90 0d       	add	r25, r0
 448:	f2 9f       	mul	r31, r18
 44a:	90 0d       	add	r25, r0
 44c:	11 24       	eor	r1, r1
 44e:	fa 01       	movw	r30, r20
 450:	e8 1b       	sub	r30, r24
 452:	f9 0b       	sbc	r31, r25
 454:	9f 01       	movw	r18, r30
 456:	36 95       	lsr	r19
 458:	27 95       	ror	r18
 45a:	36 95       	lsr	r19
 45c:	27 95       	ror	r18
 45e:	36 95       	lsr	r19
 460:	27 95       	ror	r18
 462:	a5 ec       	ldi	r26, 0xC5	; 197
 464:	b0 e2       	ldi	r27, 0x20	; 32
 466:	75 d0       	rcall	.+234    	; 0x552 <__umulhisi3>
 468:	92 95       	swap	r25
 46a:	82 95       	swap	r24
 46c:	8f 70       	andi	r24, 0x0F	; 15
 46e:	89 27       	eor	r24, r25
 470:	9f 70       	andi	r25, 0x0F	; 15
 472:	89 27       	eor	r24, r25
 474:	80 93 63 00 	sts	0x0063, r24	; 0x800063 <R4>
	R5 = number%10000/10000;
 478:	9f 01       	movw	r18, r30
 47a:	32 95       	swap	r19
 47c:	22 95       	swap	r18
 47e:	2f 70       	andi	r18, 0x0F	; 15
 480:	23 27       	eor	r18, r19
 482:	3f 70       	andi	r19, 0x0F	; 15
 484:	23 27       	eor	r18, r19
 486:	a7 e4       	ldi	r26, 0x47	; 71
 488:	b3 e0       	ldi	r27, 0x03	; 3
 48a:	63 d0       	rcall	.+198    	; 0x552 <__umulhisi3>
 48c:	96 95       	lsr	r25
 48e:	87 95       	ror	r24
 490:	96 95       	lsr	r25
 492:	87 95       	ror	r24
 494:	96 95       	lsr	r25
 496:	87 95       	ror	r24
 498:	80 93 62 00 	sts	0x0062, r24	; 0x800062 <R5>
	R6 = number/100000;
 49c:	ba 01       	movw	r22, r20
 49e:	80 e0       	ldi	r24, 0x00	; 0
 4a0:	90 e0       	ldi	r25, 0x00	; 0
 4a2:	20 ea       	ldi	r18, 0xA0	; 160
 4a4:	36 e8       	ldi	r19, 0x86	; 134
 4a6:	41 e0       	ldi	r20, 0x01	; 1
 4a8:	50 e0       	ldi	r21, 0x00	; 0
 4aa:	37 d0       	rcall	.+110    	; 0x51a <__divmodsi4>
 4ac:	20 93 61 00 	sts	0x0061, r18	; 0x800061 <R6>
	sei();
 4b0:	78 94       	sei
 4b2:	08 95       	ret

000004b4 <main>:
//-----------------------------------------//

int main(void)
{
	
	timer_ini(); 
 4b4:	c7 de       	rcall	.-626    	; 0x244 <timer_ini>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 4b6:	28 e2       	ldi	r18, 0x28	; 40
 4b8:	2a 95       	dec	r18
 4ba:	f1 f7       	brne	.-4      	; 0x4b8 <main+0x4>
	_delay_us(15);
	ds3231_init();
 4bc:	84 de       	rcall	.-760    	; 0x1c6 <ds3231_init>
 4be:	88 e2       	ldi	r24, 0x28	; 40
 4c0:	8a 95       	dec	r24
 4c2:	f1 f7       	brne	.-4      	; 0x4c0 <main+0xc>
	_delay_us(15);
	
	DDRD=0xFF;
 4c4:	8f ef       	ldi	r24, 0xFF	; 255
 4c6:	81 bb       	out	0x11, r24	; 17
	DDRB=0b00001111;
 4c8:	8f e0       	ldi	r24, 0x0F	; 15
 4ca:	87 bb       	out	0x17, r24	; 23
	DDRC=0b00011111;
 4cc:	9f e1       	ldi	r25, 0x1F	; 31
 4ce:	94 bb       	out	0x14, r25	; 20
	PORTD=0b00000000;
 4d0:	12 ba       	out	0x12, r1	; 18
	PORTB=0b00001111;
 4d2:	88 bb       	out	0x18, r24	; 24
	PORTC=0b00001111;
 4d4:	85 bb       	out	0x15, r24	; 21
	i=0;
 4d6:	10 92 68 00 	sts	0x0068, r1	; 0x800068 <i+0x1>
 4da:	10 92 67 00 	sts	0x0067, r1	; 0x800067 <i>
	sei();
 4de:	78 94       	sei
	
	while (1)
	{
/*		ds3231_read_time(time);*/
/*		ledprint();*/
		for (i=0;i<10000;i++)
 4e0:	10 92 68 00 	sts	0x0068, r1	; 0x800068 <i+0x1>
 4e4:	10 92 67 00 	sts	0x0067, r1	; 0x800067 <i>
		{
			ledprint(12345);
 4e8:	89 e3       	ldi	r24, 0x39	; 57
 4ea:	90 e3       	ldi	r25, 0x30	; 48
 4ec:	33 df       	rcall	.-410    	; 0x354 <ledprint>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 4ee:	9f ef       	ldi	r25, 0xFF	; 255
 4f0:	29 e6       	ldi	r18, 0x69	; 105
 4f2:	88 e1       	ldi	r24, 0x18	; 24
 4f4:	91 50       	subi	r25, 0x01	; 1
 4f6:	20 40       	sbci	r18, 0x00	; 0
 4f8:	80 40       	sbci	r24, 0x00	; 0
 4fa:	e1 f7       	brne	.-8      	; 0x4f4 <main+0x40>
 4fc:	00 c0       	rjmp	.+0      	; 0x4fe <main+0x4a>
 4fe:	00 00       	nop
	
	while (1)
	{
/*		ds3231_read_time(time);*/
/*		ledprint();*/
		for (i=0;i<10000;i++)
 500:	80 91 67 00 	lds	r24, 0x0067	; 0x800067 <i>
 504:	90 91 68 00 	lds	r25, 0x0068	; 0x800068 <i+0x1>
 508:	01 96       	adiw	r24, 0x01	; 1
 50a:	90 93 68 00 	sts	0x0068, r25	; 0x800068 <i+0x1>
 50e:	80 93 67 00 	sts	0x0067, r24	; 0x800067 <i>
 512:	80 31       	cpi	r24, 0x10	; 16
 514:	97 42       	sbci	r25, 0x27	; 39
 516:	40 f3       	brcs	.-48     	; 0x4e8 <main+0x34>
 518:	e3 cf       	rjmp	.-58     	; 0x4e0 <main+0x2c>

0000051a <__divmodsi4>:
 51a:	05 2e       	mov	r0, r21
 51c:	97 fb       	bst	r25, 7
 51e:	16 f4       	brtc	.+4      	; 0x524 <__divmodsi4+0xa>
 520:	00 94       	com	r0
 522:	0f d0       	rcall	.+30     	; 0x542 <__negsi2>
 524:	57 fd       	sbrc	r21, 7
 526:	05 d0       	rcall	.+10     	; 0x532 <__divmodsi4_neg2>
 528:	20 d0       	rcall	.+64     	; 0x56a <__udivmodsi4>
 52a:	07 fc       	sbrc	r0, 7
 52c:	02 d0       	rcall	.+4      	; 0x532 <__divmodsi4_neg2>
 52e:	46 f4       	brtc	.+16     	; 0x540 <__divmodsi4_exit>
 530:	08 c0       	rjmp	.+16     	; 0x542 <__negsi2>

00000532 <__divmodsi4_neg2>:
 532:	50 95       	com	r21
 534:	40 95       	com	r20
 536:	30 95       	com	r19
 538:	21 95       	neg	r18
 53a:	3f 4f       	sbci	r19, 0xFF	; 255
 53c:	4f 4f       	sbci	r20, 0xFF	; 255
 53e:	5f 4f       	sbci	r21, 0xFF	; 255

00000540 <__divmodsi4_exit>:
 540:	08 95       	ret

00000542 <__negsi2>:
 542:	90 95       	com	r25
 544:	80 95       	com	r24
 546:	70 95       	com	r23
 548:	61 95       	neg	r22
 54a:	7f 4f       	sbci	r23, 0xFF	; 255
 54c:	8f 4f       	sbci	r24, 0xFF	; 255
 54e:	9f 4f       	sbci	r25, 0xFF	; 255
 550:	08 95       	ret

00000552 <__umulhisi3>:
 552:	a2 9f       	mul	r26, r18
 554:	b0 01       	movw	r22, r0
 556:	b3 9f       	mul	r27, r19
 558:	c0 01       	movw	r24, r0
 55a:	a3 9f       	mul	r26, r19
 55c:	01 d0       	rcall	.+2      	; 0x560 <__umulhisi3+0xe>
 55e:	b2 9f       	mul	r27, r18
 560:	70 0d       	add	r23, r0
 562:	81 1d       	adc	r24, r1
 564:	11 24       	eor	r1, r1
 566:	91 1d       	adc	r25, r1
 568:	08 95       	ret

0000056a <__udivmodsi4>:
 56a:	a1 e2       	ldi	r26, 0x21	; 33
 56c:	1a 2e       	mov	r1, r26
 56e:	aa 1b       	sub	r26, r26
 570:	bb 1b       	sub	r27, r27
 572:	fd 01       	movw	r30, r26
 574:	0d c0       	rjmp	.+26     	; 0x590 <__udivmodsi4_ep>

00000576 <__udivmodsi4_loop>:
 576:	aa 1f       	adc	r26, r26
 578:	bb 1f       	adc	r27, r27
 57a:	ee 1f       	adc	r30, r30
 57c:	ff 1f       	adc	r31, r31
 57e:	a2 17       	cp	r26, r18
 580:	b3 07       	cpc	r27, r19
 582:	e4 07       	cpc	r30, r20
 584:	f5 07       	cpc	r31, r21
 586:	20 f0       	brcs	.+8      	; 0x590 <__udivmodsi4_ep>
 588:	a2 1b       	sub	r26, r18
 58a:	b3 0b       	sbc	r27, r19
 58c:	e4 0b       	sbc	r30, r20
 58e:	f5 0b       	sbc	r31, r21

00000590 <__udivmodsi4_ep>:
 590:	66 1f       	adc	r22, r22
 592:	77 1f       	adc	r23, r23
 594:	88 1f       	adc	r24, r24
 596:	99 1f       	adc	r25, r25
 598:	1a 94       	dec	r1
 59a:	69 f7       	brne	.-38     	; 0x576 <__udivmodsi4_loop>
 59c:	60 95       	com	r22
 59e:	70 95       	com	r23
 5a0:	80 95       	com	r24
 5a2:	90 95       	com	r25
 5a4:	9b 01       	movw	r18, r22
 5a6:	ac 01       	movw	r20, r24
 5a8:	bd 01       	movw	r22, r26
 5aa:	cf 01       	movw	r24, r30
 5ac:	08 95       	ret

000005ae <_exit>:
 5ae:	f8 94       	cli

000005b0 <__stop_program>:
 5b0:	ff cf       	rjmp	.-2      	; 0x5b0 <__stop_program>
