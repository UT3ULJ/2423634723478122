
timer indikator.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000150  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  000001c4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000001  00800060  00800060  000001c4  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000001c4  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000001f4  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000c8  00000000  00000000  00000230  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001776  00000000  00000000  000002f8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000006cc  00000000  00000000  00001a6e  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000a42  00000000  00000000  0000213a  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000244  00000000  00000000  00002b7c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000004af  00000000  00000000  00002dc0  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000012d6  00000000  00000000  0000326f  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000b8  00000000  00000000  00004545  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	12 c0       	rjmp	.+36     	; 0x26 <__ctors_end>
   2:	21 c0       	rjmp	.+66     	; 0x46 <__bad_interrupt>
   4:	20 c0       	rjmp	.+64     	; 0x46 <__bad_interrupt>
   6:	1f c0       	rjmp	.+62     	; 0x46 <__bad_interrupt>
   8:	1e c0       	rjmp	.+60     	; 0x46 <__bad_interrupt>
   a:	1d c0       	rjmp	.+58     	; 0x46 <__bad_interrupt>
   c:	1c c0       	rjmp	.+56     	; 0x46 <__bad_interrupt>
   e:	1b c0       	rjmp	.+54     	; 0x46 <__bad_interrupt>
  10:	1a c0       	rjmp	.+52     	; 0x46 <__bad_interrupt>
  12:	19 c0       	rjmp	.+50     	; 0x46 <__bad_interrupt>
  14:	18 c0       	rjmp	.+48     	; 0x46 <__bad_interrupt>
  16:	17 c0       	rjmp	.+46     	; 0x46 <__bad_interrupt>
  18:	16 c0       	rjmp	.+44     	; 0x46 <__bad_interrupt>
  1a:	15 c0       	rjmp	.+42     	; 0x46 <__bad_interrupt>
  1c:	14 c0       	rjmp	.+40     	; 0x46 <__bad_interrupt>
  1e:	13 c0       	rjmp	.+38     	; 0x46 <__bad_interrupt>
  20:	12 c0       	rjmp	.+36     	; 0x46 <__bad_interrupt>
  22:	11 c0       	rjmp	.+34     	; 0x46 <__bad_interrupt>
  24:	10 c0       	rjmp	.+32     	; 0x46 <__bad_interrupt>

00000026 <__ctors_end>:
  26:	11 24       	eor	r1, r1
  28:	1f be       	out	0x3f, r1	; 63
  2a:	cf e5       	ldi	r28, 0x5F	; 95
  2c:	d4 e0       	ldi	r29, 0x04	; 4
  2e:	de bf       	out	0x3e, r29	; 62
  30:	cd bf       	out	0x3d, r28	; 61

00000032 <__do_clear_bss>:
  32:	20 e0       	ldi	r18, 0x00	; 0
  34:	a0 e6       	ldi	r26, 0x60	; 96
  36:	b0 e0       	ldi	r27, 0x00	; 0
  38:	01 c0       	rjmp	.+2      	; 0x3c <.do_clear_bss_start>

0000003a <.do_clear_bss_loop>:
  3a:	1d 92       	st	X+, r1

0000003c <.do_clear_bss_start>:
  3c:	a1 36       	cpi	r26, 0x61	; 97
  3e:	b2 07       	cpc	r27, r18
  40:	e1 f7       	brne	.-8      	; 0x3a <.do_clear_bss_loop>
  42:	02 d0       	rcall	.+4      	; 0x48 <main>
  44:	83 c0       	rjmp	.+262    	; 0x14c <_exit>

00000046 <__bad_interrupt>:
  46:	dc cf       	rjmp	.-72     	; 0x0 <__vectors>

00000048 <main>:
/*	timer_ini(); */
// 	_delay_us(15);
// 	ds3231_init();
// 	_delay_us(15);
	
	DDRD=0xFF;
  48:	8f ef       	ldi	r24, 0xFF	; 255
  4a:	81 bb       	out	0x11, r24	; 17
	DDRB=0b00001111;
  4c:	8f e0       	ldi	r24, 0x0F	; 15
  4e:	87 bb       	out	0x17, r24	; 23
	DDRC=0b00011111;
  50:	9f e1       	ldi	r25, 0x1F	; 31
  52:	94 bb       	out	0x14, r25	; 20
	PORTD=0b00000000;
  54:	12 ba       	out	0x12, r1	; 18
	PORTB=0b00001111;
  56:	88 bb       	out	0x18, r24	; 24
	PORTC=0b01001111;
  58:	8f e4       	ldi	r24, 0x4F	; 79
  5a:	85 bb       	out	0x15, r24	; 21
	cli();
  5c:	f8 94       	cli
		
/*		for (i=0;i<5;i++)*/
		

/*			_delay_ms(1000);*/
			if (n_count==0) {PORTC&=~(1<<PORTC0);PORTC&=~(1<<PORTC1);PORTC&=~(1<<PORTC2);PORTC&=~(1<<PORTC3);PORTB&=~(1<<PORTB0);PORTB|=(1<<PORTB1); PORTD=One;}
  5e:	91 e0       	ldi	r25, 0x01	; 1
			_delay_us(500);
			if (n_count==1) {PORTC&=~(1<<PORTC0);PORTC&=~(1<<PORTC1);PORTC&=~(1<<PORTC2);PORTC&=~(1<<PORTC3);PORTB&=~(1<<PORTB1);PORTB|=(1<<PORTB0); PORTD=Two;}
  60:	62 e0       	ldi	r22, 0x02	; 2
			_delay_us(500);
			if (n_count==2) {PORTC&=~(1<<PORTC0);PORTC&=~(1<<PORTC1);PORTC&=~(1<<PORTC2);PORTB&=~(1<<PORTB0);PORTB&=~(1<<PORTB1);PORTC|=(1<<PORTC3); PORTD=Three;}
  62:	53 e0       	ldi	r21, 0x03	; 3
			_delay_us(500);
			if (n_count==3)	{PORTC&=~(1<<PORTC0);PORTC&=~(1<<PORTC1);PORTC&=~(1<<PORTC3);PORTB&=~(1<<PORTB0);PORTB&=~(1<<PORTB1);PORTC|=(1<<PORTC2); PORTD=Four;}
  64:	44 e0       	ldi	r20, 0x04	; 4
			_delay_us(500);
			if (n_count==4)	{PORTC&=~(1<<PORTC0);PORTC&=~(1<<PORTC2);PORTC&=~(1<<PORTC3);PORTB&=~(1<<PORTB0);PORTB&=~(1<<PORTB1);PORTC|=(1<<PORTC1); PORTD=Five;}
  66:	35 e0       	ldi	r19, 0x05	; 5
			_delay_us(500);
			if (n_count==5)	{PORTC&=~(1<<PORTC1);PORTC&=~(1<<PORTC2);PORTC&=~(1<<PORTC3);PORTB&=~(1<<PORTB0);PORTB&=~(1<<PORTB1);PORTC|=(1<<PORTC0); PORTD=Six;}
  68:	26 e0       	ldi	r18, 0x06	; 6
		
/*		for (i=0;i<5;i++)*/
		

/*			_delay_ms(1000);*/
			if (n_count==0) {PORTC&=~(1<<PORTC0);PORTC&=~(1<<PORTC1);PORTC&=~(1<<PORTC2);PORTC&=~(1<<PORTC3);PORTB&=~(1<<PORTB0);PORTB|=(1<<PORTB1); PORTD=One;}
  6a:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <_edata>
  6e:	81 11       	cpse	r24, r1
  70:	07 c0       	rjmp	.+14     	; 0x80 <main+0x38>
  72:	a8 98       	cbi	0x15, 0	; 21
  74:	a9 98       	cbi	0x15, 1	; 21
  76:	aa 98       	cbi	0x15, 2	; 21
  78:	ab 98       	cbi	0x15, 3	; 21
  7a:	c0 98       	cbi	0x18, 0	; 24
  7c:	c1 9a       	sbi	0x18, 1	; 24
  7e:	92 bb       	out	0x12, r25	; 18
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  80:	e7 ee       	ldi	r30, 0xE7	; 231
  82:	f3 e0       	ldi	r31, 0x03	; 3
  84:	31 97       	sbiw	r30, 0x01	; 1
  86:	f1 f7       	brne	.-4      	; 0x84 <main+0x3c>
  88:	00 c0       	rjmp	.+0      	; 0x8a <main+0x42>
  8a:	00 00       	nop
			_delay_us(500);
			if (n_count==1) {PORTC&=~(1<<PORTC0);PORTC&=~(1<<PORTC1);PORTC&=~(1<<PORTC2);PORTC&=~(1<<PORTC3);PORTB&=~(1<<PORTB1);PORTB|=(1<<PORTB0); PORTD=Two;}
  8c:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <_edata>
  90:	81 30       	cpi	r24, 0x01	; 1
  92:	39 f4       	brne	.+14     	; 0xa2 <main+0x5a>
  94:	a8 98       	cbi	0x15, 0	; 21
  96:	a9 98       	cbi	0x15, 1	; 21
  98:	aa 98       	cbi	0x15, 2	; 21
  9a:	ab 98       	cbi	0x15, 3	; 21
  9c:	c1 98       	cbi	0x18, 1	; 24
  9e:	c0 9a       	sbi	0x18, 0	; 24
  a0:	62 bb       	out	0x12, r22	; 18
  a2:	e7 ee       	ldi	r30, 0xE7	; 231
  a4:	f3 e0       	ldi	r31, 0x03	; 3
  a6:	31 97       	sbiw	r30, 0x01	; 1
  a8:	f1 f7       	brne	.-4      	; 0xa6 <main+0x5e>
  aa:	00 c0       	rjmp	.+0      	; 0xac <main+0x64>
  ac:	00 00       	nop
			_delay_us(500);
			if (n_count==2) {PORTC&=~(1<<PORTC0);PORTC&=~(1<<PORTC1);PORTC&=~(1<<PORTC2);PORTB&=~(1<<PORTB0);PORTB&=~(1<<PORTB1);PORTC|=(1<<PORTC3); PORTD=Three;}
  ae:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <_edata>
  b2:	82 30       	cpi	r24, 0x02	; 2
  b4:	39 f4       	brne	.+14     	; 0xc4 <main+0x7c>
  b6:	a8 98       	cbi	0x15, 0	; 21
  b8:	a9 98       	cbi	0x15, 1	; 21
  ba:	aa 98       	cbi	0x15, 2	; 21
  bc:	c0 98       	cbi	0x18, 0	; 24
  be:	c1 98       	cbi	0x18, 1	; 24
  c0:	ab 9a       	sbi	0x15, 3	; 21
  c2:	52 bb       	out	0x12, r21	; 18
  c4:	e7 ee       	ldi	r30, 0xE7	; 231
  c6:	f3 e0       	ldi	r31, 0x03	; 3
  c8:	31 97       	sbiw	r30, 0x01	; 1
  ca:	f1 f7       	brne	.-4      	; 0xc8 <main+0x80>
  cc:	00 c0       	rjmp	.+0      	; 0xce <main+0x86>
  ce:	00 00       	nop
			_delay_us(500);
			if (n_count==3)	{PORTC&=~(1<<PORTC0);PORTC&=~(1<<PORTC1);PORTC&=~(1<<PORTC3);PORTB&=~(1<<PORTB0);PORTB&=~(1<<PORTB1);PORTC|=(1<<PORTC2); PORTD=Four;}
  d0:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <_edata>
  d4:	83 30       	cpi	r24, 0x03	; 3
  d6:	39 f4       	brne	.+14     	; 0xe6 <main+0x9e>
  d8:	a8 98       	cbi	0x15, 0	; 21
  da:	a9 98       	cbi	0x15, 1	; 21
  dc:	ab 98       	cbi	0x15, 3	; 21
  de:	c0 98       	cbi	0x18, 0	; 24
  e0:	c1 98       	cbi	0x18, 1	; 24
  e2:	aa 9a       	sbi	0x15, 2	; 21
  e4:	42 bb       	out	0x12, r20	; 18
  e6:	e7 ee       	ldi	r30, 0xE7	; 231
  e8:	f3 e0       	ldi	r31, 0x03	; 3
  ea:	31 97       	sbiw	r30, 0x01	; 1
  ec:	f1 f7       	brne	.-4      	; 0xea <main+0xa2>
  ee:	00 c0       	rjmp	.+0      	; 0xf0 <main+0xa8>
  f0:	00 00       	nop
			_delay_us(500);
			if (n_count==4)	{PORTC&=~(1<<PORTC0);PORTC&=~(1<<PORTC2);PORTC&=~(1<<PORTC3);PORTB&=~(1<<PORTB0);PORTB&=~(1<<PORTB1);PORTC|=(1<<PORTC1); PORTD=Five;}
  f2:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <_edata>
  f6:	84 30       	cpi	r24, 0x04	; 4
  f8:	39 f4       	brne	.+14     	; 0x108 <main+0xc0>
  fa:	a8 98       	cbi	0x15, 0	; 21
  fc:	aa 98       	cbi	0x15, 2	; 21
  fe:	ab 98       	cbi	0x15, 3	; 21
 100:	c0 98       	cbi	0x18, 0	; 24
 102:	c1 98       	cbi	0x18, 1	; 24
 104:	a9 9a       	sbi	0x15, 1	; 21
 106:	32 bb       	out	0x12, r19	; 18
 108:	e7 ee       	ldi	r30, 0xE7	; 231
 10a:	f3 e0       	ldi	r31, 0x03	; 3
 10c:	31 97       	sbiw	r30, 0x01	; 1
 10e:	f1 f7       	brne	.-4      	; 0x10c <main+0xc4>
 110:	00 c0       	rjmp	.+0      	; 0x112 <main+0xca>
 112:	00 00       	nop
			_delay_us(500);
			if (n_count==5)	{PORTC&=~(1<<PORTC1);PORTC&=~(1<<PORTC2);PORTC&=~(1<<PORTC3);PORTB&=~(1<<PORTB0);PORTB&=~(1<<PORTB1);PORTC|=(1<<PORTC0); PORTD=Six;}
 114:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <_edata>
 118:	85 30       	cpi	r24, 0x05	; 5
 11a:	39 f4       	brne	.+14     	; 0x12a <main+0xe2>
 11c:	a9 98       	cbi	0x15, 1	; 21
 11e:	aa 98       	cbi	0x15, 2	; 21
 120:	ab 98       	cbi	0x15, 3	; 21
 122:	c0 98       	cbi	0x18, 0	; 24
 124:	c1 98       	cbi	0x18, 1	; 24
 126:	a8 9a       	sbi	0x15, 0	; 21
 128:	22 bb       	out	0x12, r18	; 18
 12a:	e7 ee       	ldi	r30, 0xE7	; 231
 12c:	f3 e0       	ldi	r31, 0x03	; 3
 12e:	31 97       	sbiw	r30, 0x01	; 1
 130:	f1 f7       	brne	.-4      	; 0x12e <main+0xe6>
 132:	00 c0       	rjmp	.+0      	; 0x134 <main+0xec>
 134:	00 00       	nop
			_delay_us(500);
			n_count++;
 136:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <_edata>
 13a:	8f 5f       	subi	r24, 0xFF	; 255
 13c:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <_edata>
			if (n_count>5) n_count=0;
 140:	86 30       	cpi	r24, 0x06	; 6
 142:	08 f4       	brcc	.+2      	; 0x146 <main+0xfe>
 144:	92 cf       	rjmp	.-220    	; 0x6a <main+0x22>
 146:	10 92 60 00 	sts	0x0060, r1	; 0x800060 <_edata>
 14a:	8f cf       	rjmp	.-226    	; 0x6a <main+0x22>

0000014c <_exit>:
 14c:	f8 94       	cli

0000014e <__stop_program>:
 14e:	ff cf       	rjmp	.-2      	; 0x14e <__stop_program>
