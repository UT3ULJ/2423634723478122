
timer indikator.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000668  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  000006dc  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          0000000c  00800060  00800060  000006dc  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000006dc  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  0000070c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000f8  00000000  00000000  00000748  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001938  00000000  00000000  00000840  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000072c  00000000  00000000  00002178  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000b62  00000000  00000000  000028a4  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000002ec  00000000  00000000  00003408  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000050d  00000000  00000000  000036f4  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00001482  00000000  00000000  00003c01  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000e8  00000000  00000000  00005083  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	1c c0       	rjmp	.+56     	; 0x3a <__ctors_end>
   2:	2b c0       	rjmp	.+86     	; 0x5a <__bad_interrupt>
   4:	2a c0       	rjmp	.+84     	; 0x5a <__bad_interrupt>
   6:	29 c0       	rjmp	.+82     	; 0x5a <__bad_interrupt>
   8:	28 c0       	rjmp	.+80     	; 0x5a <__bad_interrupt>
   a:	27 c0       	rjmp	.+78     	; 0x5a <__bad_interrupt>
   c:	9c c1       	rjmp	.+824    	; 0x346 <__vector_6>
   e:	25 c0       	rjmp	.+74     	; 0x5a <__bad_interrupt>
  10:	24 c0       	rjmp	.+72     	; 0x5a <__bad_interrupt>
  12:	23 c0       	rjmp	.+70     	; 0x5a <__bad_interrupt>
  14:	22 c0       	rjmp	.+68     	; 0x5a <__bad_interrupt>
  16:	21 c0       	rjmp	.+66     	; 0x5a <__bad_interrupt>
  18:	20 c0       	rjmp	.+64     	; 0x5a <__bad_interrupt>
  1a:	1f c0       	rjmp	.+62     	; 0x5a <__bad_interrupt>
  1c:	1e c0       	rjmp	.+60     	; 0x5a <__bad_interrupt>
  1e:	1d c0       	rjmp	.+58     	; 0x5a <__bad_interrupt>
  20:	1c c0       	rjmp	.+56     	; 0x5a <__bad_interrupt>
  22:	1b c0       	rjmp	.+54     	; 0x5a <__bad_interrupt>
  24:	1a c0       	rjmp	.+52     	; 0x5a <__bad_interrupt>
  26:	64 c1       	rjmp	.+712    	; 0x2f0 <segchar+0x10>
  28:	65 c1       	rjmp	.+714    	; 0x2f4 <segchar+0x14>
  2a:	67 c1       	rjmp	.+718    	; 0x2fa <segchar+0x1a>
  2c:	69 c1       	rjmp	.+722    	; 0x300 <segchar+0x20>
  2e:	6b c1       	rjmp	.+726    	; 0x306 <segchar+0x26>
  30:	6d c1       	rjmp	.+730    	; 0x30c <segchar+0x2c>
  32:	6f c1       	rjmp	.+734    	; 0x312 <segchar+0x32>
  34:	71 c1       	rjmp	.+738    	; 0x318 <segchar+0x38>
  36:	73 c1       	rjmp	.+742    	; 0x31e <segchar+0x3e>
  38:	75 c1       	rjmp	.+746    	; 0x324 <segchar+0x44>

0000003a <__ctors_end>:
  3a:	11 24       	eor	r1, r1
  3c:	1f be       	out	0x3f, r1	; 63
  3e:	cf e5       	ldi	r28, 0x5F	; 95
  40:	d4 e0       	ldi	r29, 0x04	; 4
  42:	de bf       	out	0x3e, r29	; 62
  44:	cd bf       	out	0x3d, r28	; 61

00000046 <__do_clear_bss>:
  46:	20 e0       	ldi	r18, 0x00	; 0
  48:	a0 e6       	ldi	r26, 0x60	; 96
  4a:	b0 e0       	ldi	r27, 0x00	; 0
  4c:	01 c0       	rjmp	.+2      	; 0x50 <.do_clear_bss_start>

0000004e <.do_clear_bss_loop>:
  4e:	1d 92       	st	X+, r1

00000050 <.do_clear_bss_start>:
  50:	ac 36       	cpi	r26, 0x6C	; 108
  52:	b2 07       	cpc	r27, r18
  54:	e1 f7       	brne	.-8      	; 0x4e <.do_clear_bss_loop>
  56:	9f d2       	rcall	.+1342   	; 0x596 <main>
  58:	05 c3       	rjmp	.+1546   	; 0x664 <_exit>

0000005a <__bad_interrupt>:
  5a:	d2 cf       	rjmp	.-92     	; 0x0 <__vectors>

0000005c <i2c_stop>:
		bcd = (dig1<<count1)|bcd;
		count1 += 4;
	}

	return bcd;
}
  5c:	a5 9a       	sbi	0x14, 5	; 20
  5e:	ad 98       	cbi	0x15, 5	; 21
  60:	8a e1       	ldi	r24, 0x1A	; 26
  62:	8a 95       	dec	r24
  64:	f1 f7       	brne	.-4      	; 0x62 <i2c_stop+0x6>
  66:	00 c0       	rjmp	.+0      	; 0x68 <i2c_stop+0xc>
  68:	a4 9a       	sbi	0x14, 4	; 20
  6a:	ac 98       	cbi	0x15, 4	; 21
  6c:	9a e1       	ldi	r25, 0x1A	; 26
  6e:	9a 95       	dec	r25
  70:	f1 f7       	brne	.-4      	; 0x6e <i2c_stop+0x12>
  72:	00 c0       	rjmp	.+0      	; 0x74 <i2c_stop+0x18>
  74:	a5 98       	cbi	0x14, 5	; 20
  76:	ad 9a       	sbi	0x15, 5	; 21
  78:	8a e1       	ldi	r24, 0x1A	; 26
  7a:	8a 95       	dec	r24
  7c:	f1 f7       	brne	.-4      	; 0x7a <i2c_stop+0x1e>
  7e:	00 c0       	rjmp	.+0      	; 0x80 <i2c_stop+0x24>
  80:	a4 98       	cbi	0x14, 4	; 20
  82:	ac 9a       	sbi	0x15, 4	; 21
  84:	9a e1       	ldi	r25, 0x1A	; 26
  86:	9a 95       	dec	r25
  88:	f1 f7       	brne	.-4      	; 0x86 <i2c_stop+0x2a>
  8a:	00 c0       	rjmp	.+0      	; 0x8c <i2c_stop+0x30>
  8c:	9c 99       	sbic	0x13, 4	; 19
  8e:	02 c0       	rjmp	.+4      	; 0x94 <i2c_stop+0x38>
  90:	82 e0       	ldi	r24, 0x02	; 2
  92:	01 c0       	rjmp	.+2      	; 0x96 <i2c_stop+0x3a>
  94:	80 e0       	ldi	r24, 0x00	; 0
  96:	9d 9b       	sbis	0x13, 5	; 19
  98:	8f 5f       	subi	r24, 0xFF	; 255
  9a:	9a e1       	ldi	r25, 0x1A	; 26
  9c:	9a 95       	dec	r25
  9e:	f1 f7       	brne	.-4      	; 0x9c <i2c_stop+0x40>
  a0:	00 c0       	rjmp	.+0      	; 0xa2 <i2c_stop+0x46>
  a2:	9a e1       	ldi	r25, 0x1A	; 26
  a4:	9a 95       	dec	r25
  a6:	f1 f7       	brne	.-4      	; 0xa4 <i2c_stop+0x48>
  a8:	00 c0       	rjmp	.+0      	; 0xaa <i2c_stop+0x4e>
  aa:	9a e1       	ldi	r25, 0x1A	; 26
  ac:	9a 95       	dec	r25
  ae:	f1 f7       	brne	.-4      	; 0xac <i2c_stop+0x50>
  b0:	00 c0       	rjmp	.+0      	; 0xb2 <i2c_stop+0x56>
  b2:	9a e1       	ldi	r25, 0x1A	; 26
  b4:	9a 95       	dec	r25
  b6:	f1 f7       	brne	.-4      	; 0xb4 <i2c_stop+0x58>
  b8:	00 c0       	rjmp	.+0      	; 0xba <i2c_stop+0x5e>
  ba:	08 95       	ret

000000bc <i2c_start>:
  bc:	a4 9a       	sbi	0x14, 4	; 20
  be:	ac 98       	cbi	0x15, 4	; 21
  c0:	8a e1       	ldi	r24, 0x1A	; 26
  c2:	8a 95       	dec	r24
  c4:	f1 f7       	brne	.-4      	; 0xc2 <i2c_start+0x6>
  c6:	00 c0       	rjmp	.+0      	; 0xc8 <i2c_start+0xc>
  c8:	a5 9a       	sbi	0x14, 5	; 20
  ca:	ad 98       	cbi	0x15, 5	; 21
  cc:	8a e1       	ldi	r24, 0x1A	; 26
  ce:	8a 95       	dec	r24
  d0:	f1 f7       	brne	.-4      	; 0xce <i2c_start+0x12>
  d2:	00 c0       	rjmp	.+0      	; 0xd4 <i2c_start+0x18>
  d4:	08 95       	ret

000000d6 <i2c_restart>:
  d6:	a4 98       	cbi	0x14, 4	; 20
  d8:	ac 9a       	sbi	0x15, 4	; 21
  da:	8a e1       	ldi	r24, 0x1A	; 26
  dc:	8a 95       	dec	r24
  de:	f1 f7       	brne	.-4      	; 0xdc <i2c_restart+0x6>
  e0:	00 c0       	rjmp	.+0      	; 0xe2 <i2c_restart+0xc>
  e2:	a5 98       	cbi	0x14, 5	; 20
  e4:	ad 9a       	sbi	0x15, 5	; 21
  e6:	8a e1       	ldi	r24, 0x1A	; 26
  e8:	8a 95       	dec	r24
  ea:	f1 f7       	brne	.-4      	; 0xe8 <i2c_restart+0x12>
  ec:	00 c0       	rjmp	.+0      	; 0xee <i2c_restart+0x18>
  ee:	a4 9a       	sbi	0x14, 4	; 20
  f0:	ac 98       	cbi	0x15, 4	; 21
  f2:	8a e1       	ldi	r24, 0x1A	; 26
  f4:	8a 95       	dec	r24
  f6:	f1 f7       	brne	.-4      	; 0xf4 <i2c_restart+0x1e>
  f8:	00 c0       	rjmp	.+0      	; 0xfa <i2c_restart+0x24>
  fa:	a5 9a       	sbi	0x14, 5	; 20
  fc:	ad 98       	cbi	0x15, 5	; 21
  fe:	8a e1       	ldi	r24, 0x1A	; 26
 100:	8a 95       	dec	r24
 102:	f1 f7       	brne	.-4      	; 0x100 <i2c_restart+0x2a>
 104:	00 c0       	rjmp	.+0      	; 0x106 <i2c_restart+0x30>
 106:	08 95       	ret

00000108 <i2c_init>:
 108:	a4 98       	cbi	0x14, 4	; 20
 10a:	ac 9a       	sbi	0x15, 4	; 21
 10c:	a5 98       	cbi	0x14, 5	; 20
 10e:	ad 9a       	sbi	0x15, 5	; 21
 110:	a5 df       	rcall	.-182    	; 0x5c <i2c_stop>
 112:	08 95       	ret

00000114 <i2c_send_byte>:
 114:	98 e0       	ldi	r25, 0x08	; 8
 116:	88 23       	and	r24, r24
 118:	1c f0       	brlt	.+6      	; 0x120 <i2c_send_byte+0xc>
 11a:	a4 9a       	sbi	0x14, 4	; 20
 11c:	ac 98       	cbi	0x15, 4	; 21
 11e:	02 c0       	rjmp	.+4      	; 0x124 <i2c_send_byte+0x10>
 120:	a4 98       	cbi	0x14, 4	; 20
 122:	ac 9a       	sbi	0x15, 4	; 21
 124:	2a e1       	ldi	r18, 0x1A	; 26
 126:	2a 95       	dec	r18
 128:	f1 f7       	brne	.-4      	; 0x126 <i2c_send_byte+0x12>
 12a:	00 c0       	rjmp	.+0      	; 0x12c <i2c_send_byte+0x18>
 12c:	a5 98       	cbi	0x14, 5	; 20
 12e:	ad 9a       	sbi	0x15, 5	; 21
 130:	2a e1       	ldi	r18, 0x1A	; 26
 132:	2a 95       	dec	r18
 134:	f1 f7       	brne	.-4      	; 0x132 <i2c_send_byte+0x1e>
 136:	00 c0       	rjmp	.+0      	; 0x138 <i2c_send_byte+0x24>
 138:	a5 9a       	sbi	0x14, 5	; 20
 13a:	ad 98       	cbi	0x15, 5	; 21
 13c:	88 0f       	add	r24, r24
 13e:	91 50       	subi	r25, 0x01	; 1
 140:	51 f7       	brne	.-44     	; 0x116 <i2c_send_byte+0x2>
 142:	a4 98       	cbi	0x14, 4	; 20
 144:	ac 9a       	sbi	0x15, 4	; 21
 146:	8a e1       	ldi	r24, 0x1A	; 26
 148:	8a 95       	dec	r24
 14a:	f1 f7       	brne	.-4      	; 0x148 <i2c_send_byte+0x34>
 14c:	00 c0       	rjmp	.+0      	; 0x14e <i2c_send_byte+0x3a>
 14e:	a5 98       	cbi	0x14, 5	; 20
 150:	ad 9a       	sbi	0x15, 5	; 21
 152:	2a e1       	ldi	r18, 0x1A	; 26
 154:	2a 95       	dec	r18
 156:	f1 f7       	brne	.-4      	; 0x154 <i2c_send_byte+0x40>
 158:	00 c0       	rjmp	.+0      	; 0x15a <i2c_send_byte+0x46>
 15a:	83 b3       	in	r24, 0x13	; 19
 15c:	a5 9a       	sbi	0x14, 5	; 20
 15e:	ad 98       	cbi	0x15, 5	; 21
 160:	82 95       	swap	r24
 162:	81 70       	andi	r24, 0x01	; 1
 164:	08 95       	ret

00000166 <i2c_read_byte>:
 166:	28 2f       	mov	r18, r24
 168:	a4 98       	cbi	0x14, 4	; 20
 16a:	ac 9a       	sbi	0x15, 4	; 21
 16c:	98 e0       	ldi	r25, 0x08	; 8
 16e:	80 e0       	ldi	r24, 0x00	; 0
 170:	88 0f       	add	r24, r24
 172:	a5 98       	cbi	0x14, 5	; 20
 174:	ad 9a       	sbi	0x15, 5	; 21
 176:	3a e1       	ldi	r19, 0x1A	; 26
 178:	3a 95       	dec	r19
 17a:	f1 f7       	brne	.-4      	; 0x178 <i2c_read_byte+0x12>
 17c:	00 c0       	rjmp	.+0      	; 0x17e <i2c_read_byte+0x18>
 17e:	9c 99       	sbic	0x13, 4	; 19
 180:	81 60       	ori	r24, 0x01	; 1
 182:	a5 9a       	sbi	0x14, 5	; 20
 184:	ad 98       	cbi	0x15, 5	; 21
 186:	3a e1       	ldi	r19, 0x1A	; 26
 188:	3a 95       	dec	r19
 18a:	f1 f7       	brne	.-4      	; 0x188 <i2c_read_byte+0x22>
 18c:	00 c0       	rjmp	.+0      	; 0x18e <i2c_read_byte+0x28>
 18e:	91 50       	subi	r25, 0x01	; 1
 190:	79 f7       	brne	.-34     	; 0x170 <i2c_read_byte+0xa>
 192:	21 11       	cpse	r18, r1
 194:	03 c0       	rjmp	.+6      	; 0x19c <i2c_read_byte+0x36>
 196:	a4 9a       	sbi	0x14, 4	; 20
 198:	ac 98       	cbi	0x15, 4	; 21
 19a:	02 c0       	rjmp	.+4      	; 0x1a0 <i2c_read_byte+0x3a>
 19c:	a4 98       	cbi	0x14, 4	; 20
 19e:	ac 9a       	sbi	0x15, 4	; 21
 1a0:	9a e1       	ldi	r25, 0x1A	; 26
 1a2:	9a 95       	dec	r25
 1a4:	f1 f7       	brne	.-4      	; 0x1a2 <i2c_read_byte+0x3c>
 1a6:	00 c0       	rjmp	.+0      	; 0x1a8 <i2c_read_byte+0x42>
 1a8:	a5 98       	cbi	0x14, 5	; 20
 1aa:	ad 9a       	sbi	0x15, 5	; 21
 1ac:	3a e1       	ldi	r19, 0x1A	; 26
 1ae:	3a 95       	dec	r19
 1b0:	f1 f7       	brne	.-4      	; 0x1ae <i2c_read_byte+0x48>
 1b2:	00 c0       	rjmp	.+0      	; 0x1b4 <i2c_read_byte+0x4e>
 1b4:	a5 9a       	sbi	0x14, 5	; 20
 1b6:	ad 98       	cbi	0x15, 5	; 21
 1b8:	9a e1       	ldi	r25, 0x1A	; 26
 1ba:	9a 95       	dec	r25
 1bc:	f1 f7       	brne	.-4      	; 0x1ba <i2c_read_byte+0x54>
 1be:	00 c0       	rjmp	.+0      	; 0x1c0 <i2c_read_byte+0x5a>
 1c0:	a4 98       	cbi	0x14, 4	; 20
 1c2:	ac 9a       	sbi	0x15, 4	; 21
 1c4:	08 95       	ret

000001c6 <ds3231_init>:
 1c6:	cf 93       	push	r28
 1c8:	9f df       	rcall	.-194    	; 0x108 <i2c_init>
 1ca:	78 df       	rcall	.-272    	; 0xbc <i2c_start>
 1cc:	80 ed       	ldi	r24, 0xD0	; 208
 1ce:	a2 df       	rcall	.-188    	; 0x114 <i2c_send_byte>
 1d0:	8e e0       	ldi	r24, 0x0E	; 14
 1d2:	a0 df       	rcall	.-192    	; 0x114 <i2c_send_byte>
 1d4:	80 df       	rcall	.-256    	; 0xd6 <i2c_restart>
 1d6:	81 ed       	ldi	r24, 0xD1	; 209
 1d8:	9d df       	rcall	.-198    	; 0x114 <i2c_send_byte>
 1da:	81 e0       	ldi	r24, 0x01	; 1
 1dc:	c4 df       	rcall	.-120    	; 0x166 <i2c_read_byte>
 1de:	c8 2f       	mov	r28, r24
 1e0:	3d df       	rcall	.-390    	; 0x5c <i2c_stop>
 1e2:	6c df       	rcall	.-296    	; 0xbc <i2c_start>
 1e4:	80 ed       	ldi	r24, 0xD0	; 208
 1e6:	96 df       	rcall	.-212    	; 0x114 <i2c_send_byte>
 1e8:	8e e0       	ldi	r24, 0x0E	; 14
 1ea:	94 df       	rcall	.-216    	; 0x114 <i2c_send_byte>
 1ec:	74 df       	rcall	.-280    	; 0xd6 <i2c_restart>
 1ee:	8c 2f       	mov	r24, r28
 1f0:	8f 77       	andi	r24, 0x7F	; 127
 1f2:	90 df       	rcall	.-224    	; 0x114 <i2c_send_byte>
 1f4:	33 df       	rcall	.-410    	; 0x5c <i2c_stop>
 1f6:	cf 91       	pop	r28
 1f8:	08 95       	ret

000001fa <ds3231_read_time>:
 1fa:	df 92       	push	r13
 1fc:	ef 92       	push	r14
 1fe:	ff 92       	push	r15
 200:	0f 93       	push	r16
 202:	1f 93       	push	r17
 204:	cf 93       	push	r28
 206:	df 93       	push	r29
 208:	00 d0       	rcall	.+0      	; 0x20a <ds3231_read_time+0x10>
 20a:	1f 92       	push	r1
 20c:	cd b7       	in	r28, 0x3d	; 61
 20e:	de b7       	in	r29, 0x3e	; 62
 210:	8c 01       	movw	r16, r24
 212:	54 df       	rcall	.-344    	; 0xbc <i2c_start>
 214:	80 ed       	ldi	r24, 0xD0	; 208
 216:	7e df       	rcall	.-260    	; 0x114 <i2c_send_byte>
 218:	80 e0       	ldi	r24, 0x00	; 0
 21a:	7c df       	rcall	.-264    	; 0x114 <i2c_send_byte>
 21c:	5c df       	rcall	.-328    	; 0xd6 <i2c_restart>
 21e:	81 ed       	ldi	r24, 0xD1	; 209
 220:	79 df       	rcall	.-270    	; 0x114 <i2c_send_byte>
 222:	80 e0       	ldi	r24, 0x00	; 0
 224:	a0 df       	rcall	.-192    	; 0x166 <i2c_read_byte>
 226:	e8 2e       	mov	r14, r24
 228:	8b 83       	std	Y+3, r24	; 0x03
 22a:	80 e0       	ldi	r24, 0x00	; 0
 22c:	9c df       	rcall	.-200    	; 0x166 <i2c_read_byte>
 22e:	d8 2e       	mov	r13, r24
 230:	8a 83       	std	Y+2, r24	; 0x02
 232:	81 e0       	ldi	r24, 0x01	; 1
 234:	98 df       	rcall	.-208    	; 0x166 <i2c_read_byte>
 236:	f8 2e       	mov	r15, r24
 238:	89 83       	std	Y+1, r24	; 0x01
 23a:	10 df       	rcall	.-480    	; 0x5c <i2c_stop>
 23c:	f6 fe       	sbrs	r15, 6
 23e:	2e c0       	rjmp	.+92     	; 0x29c <ds3231_read_time+0xa2>
 240:	f4 fa       	bst	r15, 4
 242:	88 27       	eor	r24, r24
 244:	80 f9       	bld	r24, 0
 246:	88 0f       	add	r24, r24
 248:	98 2f       	mov	r25, r24
 24a:	99 0f       	add	r25, r25
 24c:	99 0f       	add	r25, r25
 24e:	89 0f       	add	r24, r25
 250:	9f 2d       	mov	r25, r15
 252:	9f 70       	andi	r25, 0x0F	; 15
 254:	89 0f       	add	r24, r25
 256:	d8 01       	movw	r26, r16
 258:	8c 93       	st	X, r24
 25a:	8d 2d       	mov	r24, r13
 25c:	82 95       	swap	r24
 25e:	8f 70       	andi	r24, 0x0F	; 15
 260:	88 0f       	add	r24, r24
 262:	98 2f       	mov	r25, r24
 264:	99 0f       	add	r25, r25
 266:	99 0f       	add	r25, r25
 268:	98 0f       	add	r25, r24
 26a:	8d 2d       	mov	r24, r13
 26c:	8f 70       	andi	r24, 0x0F	; 15
 26e:	d9 2e       	mov	r13, r25
 270:	d8 0e       	add	r13, r24
 272:	11 96       	adiw	r26, 0x01	; 1
 274:	dc 92       	st	X, r13
 276:	11 97       	sbiw	r26, 0x01	; 1
 278:	8e 2d       	mov	r24, r14
 27a:	82 95       	swap	r24
 27c:	8f 70       	andi	r24, 0x0F	; 15
 27e:	88 0f       	add	r24, r24
 280:	98 2f       	mov	r25, r24
 282:	99 0f       	add	r25, r25
 284:	99 0f       	add	r25, r25
 286:	98 0f       	add	r25, r24
 288:	8e 2d       	mov	r24, r14
 28a:	8f 70       	andi	r24, 0x0F	; 15
 28c:	e9 2e       	mov	r14, r25
 28e:	e8 0e       	add	r14, r24
 290:	12 96       	adiw	r26, 0x02	; 2
 292:	ec 92       	st	X, r14
 294:	f5 fa       	bst	r15, 5
 296:	88 27       	eor	r24, r24
 298:	80 f9       	bld	r24, 0
 29a:	17 c0       	rjmp	.+46     	; 0x2ca <ds3231_read_time+0xd0>
 29c:	fe 01       	movw	r30, r28
 29e:	31 96       	adiw	r30, 0x01	; 1
 2a0:	a8 01       	movw	r20, r16
 2a2:	4d 5f       	subi	r20, 0xFD	; 253
 2a4:	5f 4f       	sbci	r21, 0xFF	; 255
 2a6:	81 91       	ld	r24, Z+
 2a8:	98 2f       	mov	r25, r24
 2aa:	92 95       	swap	r25
 2ac:	9f 70       	andi	r25, 0x0F	; 15
 2ae:	99 0f       	add	r25, r25
 2b0:	29 2f       	mov	r18, r25
 2b2:	22 0f       	add	r18, r18
 2b4:	22 0f       	add	r18, r18
 2b6:	92 0f       	add	r25, r18
 2b8:	8f 70       	andi	r24, 0x0F	; 15
 2ba:	89 0f       	add	r24, r25
 2bc:	d8 01       	movw	r26, r16
 2be:	8d 93       	st	X+, r24
 2c0:	8d 01       	movw	r16, r26
 2c2:	4a 17       	cp	r20, r26
 2c4:	5b 07       	cpc	r21, r27
 2c6:	79 f7       	brne	.-34     	; 0x2a6 <ds3231_read_time+0xac>
 2c8:	82 e0       	ldi	r24, 0x02	; 2
 2ca:	0f 90       	pop	r0
 2cc:	0f 90       	pop	r0
 2ce:	0f 90       	pop	r0
 2d0:	df 91       	pop	r29
 2d2:	cf 91       	pop	r28
 2d4:	1f 91       	pop	r17
 2d6:	0f 91       	pop	r16
 2d8:	ff 90       	pop	r15
 2da:	ef 90       	pop	r14
 2dc:	df 90       	pop	r13
 2de:	08 95       	ret

000002e0 <segchar>:
 2e0:	90 e0       	ldi	r25, 0x00	; 0
 2e2:	8a 30       	cpi	r24, 0x0A	; 10
 2e4:	91 05       	cpc	r25, r1
 2e6:	00 f5       	brcc	.+64     	; 0x328 <segchar+0x48>
 2e8:	fc 01       	movw	r30, r24
 2ea:	ed 5e       	subi	r30, 0xED	; 237
 2ec:	ff 4f       	sbci	r31, 0xFF	; 255
 2ee:	09 94       	ijmp
 2f0:	12 ba       	out	0x12, r1	; 18
 2f2:	08 95       	ret
 2f4:	81 e0       	ldi	r24, 0x01	; 1
 2f6:	82 bb       	out	0x12, r24	; 18
 2f8:	08 95       	ret
 2fa:	82 e0       	ldi	r24, 0x02	; 2
 2fc:	82 bb       	out	0x12, r24	; 18
 2fe:	08 95       	ret
 300:	83 e0       	ldi	r24, 0x03	; 3
 302:	82 bb       	out	0x12, r24	; 18
 304:	08 95       	ret
 306:	84 e0       	ldi	r24, 0x04	; 4
 308:	82 bb       	out	0x12, r24	; 18
 30a:	08 95       	ret
 30c:	85 e0       	ldi	r24, 0x05	; 5
 30e:	82 bb       	out	0x12, r24	; 18
 310:	08 95       	ret
 312:	86 e0       	ldi	r24, 0x06	; 6
 314:	82 bb       	out	0x12, r24	; 18
 316:	08 95       	ret
 318:	87 e0       	ldi	r24, 0x07	; 7
 31a:	82 bb       	out	0x12, r24	; 18
 31c:	08 95       	ret
 31e:	88 e0       	ldi	r24, 0x08	; 8
 320:	82 bb       	out	0x12, r24	; 18
 322:	08 95       	ret
 324:	89 e0       	ldi	r24, 0x09	; 9
 326:	82 bb       	out	0x12, r24	; 18
 328:	08 95       	ret

0000032a <timer_ini>:
 32a:	8e b5       	in	r24, 0x2e	; 46
 32c:	88 60       	ori	r24, 0x08	; 8
 32e:	8e bd       	out	0x2e, r24	; 46
 330:	89 b7       	in	r24, 0x39	; 57
 332:	80 61       	ori	r24, 0x10	; 16
 334:	89 bf       	out	0x39, r24	; 57
 336:	84 ef       	ldi	r24, 0xF4	; 244
 338:	8b bd       	out	0x2b, r24	; 43
 33a:	82 e1       	ldi	r24, 0x12	; 18
 33c:	8a bd       	out	0x2a, r24	; 42
 33e:	8e b5       	in	r24, 0x2e	; 46
 340:	81 60       	ori	r24, 0x01	; 1
 342:	8e bd       	out	0x2e, r24	; 46
 344:	08 95       	ret

00000346 <__vector_6>:


//-----------------------------------------//

ISR (TIMER1_COMPA_vect)
{
 346:	1f 92       	push	r1
 348:	0f 92       	push	r0
 34a:	0f b6       	in	r0, 0x3f	; 63
 34c:	0f 92       	push	r0
 34e:	11 24       	eor	r1, r1
 350:	2f 93       	push	r18
 352:	3f 93       	push	r19
 354:	4f 93       	push	r20
 356:	5f 93       	push	r21
 358:	6f 93       	push	r22
 35a:	7f 93       	push	r23
 35c:	8f 93       	push	r24
 35e:	9f 93       	push	r25
 360:	af 93       	push	r26
 362:	bf 93       	push	r27
 364:	ef 93       	push	r30
 366:	ff 93       	push	r31
	if (n_count==0) {PORTC&=~(1<<PORTC0);PORTC&=~(1<<PORTC1);PORTC&=~(1<<PORTC2);PORTC&=~(1<<PORTC3);PORTB&=~(1<<PORTB0);PORTB|=(1<<PORTB1); segchar(R1);}
 368:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <_edata>
 36c:	81 11       	cpse	r24, r1
 36e:	09 c0       	rjmp	.+18     	; 0x382 <__vector_6+0x3c>
 370:	a8 98       	cbi	0x15, 0	; 21
 372:	a9 98       	cbi	0x15, 1	; 21
 374:	aa 98       	cbi	0x15, 2	; 21
 376:	ab 98       	cbi	0x15, 3	; 21
 378:	c0 98       	cbi	0x18, 0	; 24
 37a:	c1 9a       	sbi	0x18, 1	; 24
 37c:	80 91 69 00 	lds	r24, 0x0069	; 0x800069 <R1>
 380:	af df       	rcall	.-162    	; 0x2e0 <segchar>
	if (n_count==1) {PORTC&=~(1<<PORTC0);PORTC&=~(1<<PORTC1);PORTC&=~(1<<PORTC2);PORTC&=~(1<<PORTC3);PORTB&=~(1<<PORTB1);PORTB|=(1<<PORTB0); segchar(R2);}
 382:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <_edata>
 386:	81 30       	cpi	r24, 0x01	; 1
 388:	49 f4       	brne	.+18     	; 0x39c <__vector_6+0x56>
 38a:	a8 98       	cbi	0x15, 0	; 21
 38c:	a9 98       	cbi	0x15, 1	; 21
 38e:	aa 98       	cbi	0x15, 2	; 21
 390:	ab 98       	cbi	0x15, 3	; 21
 392:	c1 98       	cbi	0x18, 1	; 24
 394:	c0 9a       	sbi	0x18, 0	; 24
 396:	80 91 68 00 	lds	r24, 0x0068	; 0x800068 <R2>
 39a:	a2 df       	rcall	.-188    	; 0x2e0 <segchar>
	if (n_count==2) {PORTC&=~(1<<PORTC0);PORTC&=~(1<<PORTC1);PORTC&=~(1<<PORTC2);PORTB&=~(1<<PORTB0);PORTB&=~(1<<PORTB1);PORTC|=(1<<PORTC3); segchar(R3);}
 39c:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <_edata>
 3a0:	82 30       	cpi	r24, 0x02	; 2
 3a2:	49 f4       	brne	.+18     	; 0x3b6 <__vector_6+0x70>
 3a4:	a8 98       	cbi	0x15, 0	; 21
 3a6:	a9 98       	cbi	0x15, 1	; 21
 3a8:	aa 98       	cbi	0x15, 2	; 21
 3aa:	c0 98       	cbi	0x18, 0	; 24
 3ac:	c1 98       	cbi	0x18, 1	; 24
 3ae:	ab 9a       	sbi	0x15, 3	; 21
 3b0:	80 91 67 00 	lds	r24, 0x0067	; 0x800067 <R3>
 3b4:	95 df       	rcall	.-214    	; 0x2e0 <segchar>
	if (n_count==3)	{PORTC&=~(1<<PORTC0);PORTC&=~(1<<PORTC1);PORTC&=~(1<<PORTC3);PORTB&=~(1<<PORTB0);PORTB&=~(1<<PORTB1);PORTC|=(1<<PORTC2); segchar(R4);}
 3b6:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <_edata>
 3ba:	83 30       	cpi	r24, 0x03	; 3
 3bc:	49 f4       	brne	.+18     	; 0x3d0 <__vector_6+0x8a>
 3be:	a8 98       	cbi	0x15, 0	; 21
 3c0:	a9 98       	cbi	0x15, 1	; 21
 3c2:	ab 98       	cbi	0x15, 3	; 21
 3c4:	c0 98       	cbi	0x18, 0	; 24
 3c6:	c1 98       	cbi	0x18, 1	; 24
 3c8:	aa 9a       	sbi	0x15, 2	; 21
 3ca:	80 91 66 00 	lds	r24, 0x0066	; 0x800066 <R4>
 3ce:	88 df       	rcall	.-240    	; 0x2e0 <segchar>
	if (n_count==4)	{PORTC&=~(1<<PORTC0);PORTC&=~(1<<PORTC2);PORTC&=~(1<<PORTC3);PORTB&=~(1<<PORTB0);PORTB&=~(1<<PORTB1);PORTC|=(1<<PORTC1); segchar(R5);}
 3d0:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <_edata>
 3d4:	84 30       	cpi	r24, 0x04	; 4
 3d6:	49 f4       	brne	.+18     	; 0x3ea <__vector_6+0xa4>
 3d8:	a8 98       	cbi	0x15, 0	; 21
 3da:	aa 98       	cbi	0x15, 2	; 21
 3dc:	ab 98       	cbi	0x15, 3	; 21
 3de:	c0 98       	cbi	0x18, 0	; 24
 3e0:	c1 98       	cbi	0x18, 1	; 24
 3e2:	a9 9a       	sbi	0x15, 1	; 21
 3e4:	80 91 65 00 	lds	r24, 0x0065	; 0x800065 <R5>
 3e8:	7b df       	rcall	.-266    	; 0x2e0 <segchar>
	if (n_count==5)	{PORTC&=~(1<<PORTC1);PORTC&=~(1<<PORTC2);PORTC&=~(1<<PORTC3);PORTB&=~(1<<PORTB0);PORTB&=~(1<<PORTB1);PORTC|=(1<<PORTC0); segchar(R6);}
 3ea:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <_edata>
 3ee:	85 30       	cpi	r24, 0x05	; 5
 3f0:	49 f4       	brne	.+18     	; 0x404 <__LOCK_REGION_LENGTH__+0x4>
 3f2:	a9 98       	cbi	0x15, 1	; 21
 3f4:	aa 98       	cbi	0x15, 2	; 21
 3f6:	ab 98       	cbi	0x15, 3	; 21
 3f8:	c0 98       	cbi	0x18, 0	; 24
 3fa:	c1 98       	cbi	0x18, 1	; 24
 3fc:	a8 9a       	sbi	0x15, 0	; 21
 3fe:	80 91 64 00 	lds	r24, 0x0064	; 0x800064 <R6>
 402:	6e df       	rcall	.-292    	; 0x2e0 <segchar>
	n_count++;
 404:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <_edata>
 408:	8f 5f       	subi	r24, 0xFF	; 255
	if (n_count>5) n_count=0;
 40a:	86 30       	cpi	r24, 0x06	; 6
 40c:	18 f4       	brcc	.+6      	; 0x414 <__LOCK_REGION_LENGTH__+0x14>
	if (n_count==1) {PORTC&=~(1<<PORTC0);PORTC&=~(1<<PORTC1);PORTC&=~(1<<PORTC2);PORTC&=~(1<<PORTC3);PORTB&=~(1<<PORTB1);PORTB|=(1<<PORTB0); segchar(R2);}
	if (n_count==2) {PORTC&=~(1<<PORTC0);PORTC&=~(1<<PORTC1);PORTC&=~(1<<PORTC2);PORTB&=~(1<<PORTB0);PORTB&=~(1<<PORTB1);PORTC|=(1<<PORTC3); segchar(R3);}
	if (n_count==3)	{PORTC&=~(1<<PORTC0);PORTC&=~(1<<PORTC1);PORTC&=~(1<<PORTC3);PORTB&=~(1<<PORTB0);PORTB&=~(1<<PORTB1);PORTC|=(1<<PORTC2); segchar(R4);}
	if (n_count==4)	{PORTC&=~(1<<PORTC0);PORTC&=~(1<<PORTC2);PORTC&=~(1<<PORTC3);PORTB&=~(1<<PORTB0);PORTB&=~(1<<PORTB1);PORTC|=(1<<PORTC1); segchar(R5);}
	if (n_count==5)	{PORTC&=~(1<<PORTC1);PORTC&=~(1<<PORTC2);PORTC&=~(1<<PORTC3);PORTB&=~(1<<PORTB0);PORTB&=~(1<<PORTB1);PORTC|=(1<<PORTC0); segchar(R6);}
	n_count++;
 40e:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <_edata>
 412:	02 c0       	rjmp	.+4      	; 0x418 <__LOCK_REGION_LENGTH__+0x18>
	if (n_count>5) n_count=0;
 414:	10 92 60 00 	sts	0x0060, r1	; 0x800060 <_edata>
	
}
 418:	ff 91       	pop	r31
 41a:	ef 91       	pop	r30
 41c:	bf 91       	pop	r27
 41e:	af 91       	pop	r26
 420:	9f 91       	pop	r25
 422:	8f 91       	pop	r24
 424:	7f 91       	pop	r23
 426:	6f 91       	pop	r22
 428:	5f 91       	pop	r21
 42a:	4f 91       	pop	r20
 42c:	3f 91       	pop	r19
 42e:	2f 91       	pop	r18
 430:	0f 90       	pop	r0
 432:	0f be       	out	0x3f, r0	; 63
 434:	0f 90       	pop	r0
 436:	1f 90       	pop	r1
 438:	18 95       	reti

0000043a <ledprint>:


void ledprint(unsigned int number)
{
 43a:	ac 01       	movw	r20, r24
	R1 = number%10;
 43c:	9c 01       	movw	r18, r24
 43e:	ad ec       	ldi	r26, 0xCD	; 205
 440:	bc ec       	ldi	r27, 0xCC	; 204
 442:	e2 d0       	rcall	.+452    	; 0x608 <__umulhisi3>
 444:	96 95       	lsr	r25
 446:	87 95       	ror	r24
 448:	96 95       	lsr	r25
 44a:	87 95       	ror	r24
 44c:	96 95       	lsr	r25
 44e:	87 95       	ror	r24
 450:	9c 01       	movw	r18, r24
 452:	22 0f       	add	r18, r18
 454:	33 1f       	adc	r19, r19
 456:	88 0f       	add	r24, r24
 458:	99 1f       	adc	r25, r25
 45a:	88 0f       	add	r24, r24
 45c:	99 1f       	adc	r25, r25
 45e:	88 0f       	add	r24, r24
 460:	99 1f       	adc	r25, r25
 462:	82 0f       	add	r24, r18
 464:	93 1f       	adc	r25, r19
 466:	9a 01       	movw	r18, r20
 468:	28 1b       	sub	r18, r24
 46a:	39 0b       	sbc	r19, r25
 46c:	20 93 69 00 	sts	0x0069, r18	; 0x800069 <R1>
	R2 = number%100/10;
 470:	9a 01       	movw	r18, r20
 472:	36 95       	lsr	r19
 474:	27 95       	ror	r18
 476:	36 95       	lsr	r19
 478:	27 95       	ror	r18
 47a:	ab e7       	ldi	r26, 0x7B	; 123
 47c:	b4 e1       	ldi	r27, 0x14	; 20
 47e:	c4 d0       	rcall	.+392    	; 0x608 <__umulhisi3>
 480:	96 95       	lsr	r25
 482:	87 95       	ror	r24
 484:	64 e6       	ldi	r22, 0x64	; 100
 486:	68 9f       	mul	r22, r24
 488:	90 01       	movw	r18, r0
 48a:	69 9f       	mul	r22, r25
 48c:	30 0d       	add	r19, r0
 48e:	11 24       	eor	r1, r1
 490:	ca 01       	movw	r24, r20
 492:	82 1b       	sub	r24, r18
 494:	93 0b       	sbc	r25, r19
 496:	9c 01       	movw	r18, r24
 498:	ad ec       	ldi	r26, 0xCD	; 205
 49a:	bc ec       	ldi	r27, 0xCC	; 204
 49c:	b5 d0       	rcall	.+362    	; 0x608 <__umulhisi3>
 49e:	96 95       	lsr	r25
 4a0:	87 95       	ror	r24
 4a2:	96 95       	lsr	r25
 4a4:	87 95       	ror	r24
 4a6:	96 95       	lsr	r25
 4a8:	87 95       	ror	r24
 4aa:	80 93 68 00 	sts	0x0068, r24	; 0x800068 <R2>
	R3 = number%1000/100;
 4ae:	9a 01       	movw	r18, r20
 4b0:	36 95       	lsr	r19
 4b2:	27 95       	ror	r18
 4b4:	36 95       	lsr	r19
 4b6:	27 95       	ror	r18
 4b8:	36 95       	lsr	r19
 4ba:	27 95       	ror	r18
 4bc:	a5 ec       	ldi	r26, 0xC5	; 197
 4be:	b0 e2       	ldi	r27, 0x20	; 32
 4c0:	a3 d0       	rcall	.+326    	; 0x608 <__umulhisi3>
 4c2:	92 95       	swap	r25
 4c4:	82 95       	swap	r24
 4c6:	8f 70       	andi	r24, 0x0F	; 15
 4c8:	89 27       	eor	r24, r25
 4ca:	9f 70       	andi	r25, 0x0F	; 15
 4cc:	89 27       	eor	r24, r25
 4ce:	68 ee       	ldi	r22, 0xE8	; 232
 4d0:	73 e0       	ldi	r23, 0x03	; 3
 4d2:	86 9f       	mul	r24, r22
 4d4:	90 01       	movw	r18, r0
 4d6:	87 9f       	mul	r24, r23
 4d8:	30 0d       	add	r19, r0
 4da:	96 9f       	mul	r25, r22
 4dc:	30 0d       	add	r19, r0
 4de:	11 24       	eor	r1, r1
 4e0:	ca 01       	movw	r24, r20
 4e2:	82 1b       	sub	r24, r18
 4e4:	93 0b       	sbc	r25, r19
 4e6:	9c 01       	movw	r18, r24
 4e8:	36 95       	lsr	r19
 4ea:	27 95       	ror	r18
 4ec:	36 95       	lsr	r19
 4ee:	27 95       	ror	r18
 4f0:	ab e7       	ldi	r26, 0x7B	; 123
 4f2:	b4 e1       	ldi	r27, 0x14	; 20
 4f4:	89 d0       	rcall	.+274    	; 0x608 <__umulhisi3>
 4f6:	96 95       	lsr	r25
 4f8:	87 95       	ror	r24
 4fa:	80 93 67 00 	sts	0x0067, r24	; 0x800067 <R3>
	R4 = number%10000/1000;
 4fe:	9a 01       	movw	r18, r20
 500:	32 95       	swap	r19
 502:	22 95       	swap	r18
 504:	2f 70       	andi	r18, 0x0F	; 15
 506:	23 27       	eor	r18, r19
 508:	3f 70       	andi	r19, 0x0F	; 15
 50a:	23 27       	eor	r18, r19
 50c:	a7 e4       	ldi	r26, 0x47	; 71
 50e:	b3 e0       	ldi	r27, 0x03	; 3
 510:	7b d0       	rcall	.+246    	; 0x608 <__umulhisi3>
 512:	fc 01       	movw	r30, r24
 514:	f6 95       	lsr	r31
 516:	e7 95       	ror	r30
 518:	f6 95       	lsr	r31
 51a:	e7 95       	ror	r30
 51c:	f6 95       	lsr	r31
 51e:	e7 95       	ror	r30
 520:	20 e1       	ldi	r18, 0x10	; 16
 522:	37 e2       	ldi	r19, 0x27	; 39
 524:	e2 9f       	mul	r30, r18
 526:	c0 01       	movw	r24, r0
 528:	e3 9f       	mul	r30, r19
 52a:	90 0d       	add	r25, r0
 52c:	f2 9f       	mul	r31, r18
 52e:	90 0d       	add	r25, r0
 530:	11 24       	eor	r1, r1
 532:	fa 01       	movw	r30, r20
 534:	e8 1b       	sub	r30, r24
 536:	f9 0b       	sbc	r31, r25
 538:	9f 01       	movw	r18, r30
 53a:	36 95       	lsr	r19
 53c:	27 95       	ror	r18
 53e:	36 95       	lsr	r19
 540:	27 95       	ror	r18
 542:	36 95       	lsr	r19
 544:	27 95       	ror	r18
 546:	a5 ec       	ldi	r26, 0xC5	; 197
 548:	b0 e2       	ldi	r27, 0x20	; 32
 54a:	5e d0       	rcall	.+188    	; 0x608 <__umulhisi3>
 54c:	92 95       	swap	r25
 54e:	82 95       	swap	r24
 550:	8f 70       	andi	r24, 0x0F	; 15
 552:	89 27       	eor	r24, r25
 554:	9f 70       	andi	r25, 0x0F	; 15
 556:	89 27       	eor	r24, r25
 558:	80 93 66 00 	sts	0x0066, r24	; 0x800066 <R4>
	R5 = number%10000/10000;
 55c:	9f 01       	movw	r18, r30
 55e:	32 95       	swap	r19
 560:	22 95       	swap	r18
 562:	2f 70       	andi	r18, 0x0F	; 15
 564:	23 27       	eor	r18, r19
 566:	3f 70       	andi	r19, 0x0F	; 15
 568:	23 27       	eor	r18, r19
 56a:	a7 e4       	ldi	r26, 0x47	; 71
 56c:	b3 e0       	ldi	r27, 0x03	; 3
 56e:	4c d0       	rcall	.+152    	; 0x608 <__umulhisi3>
 570:	96 95       	lsr	r25
 572:	87 95       	ror	r24
 574:	96 95       	lsr	r25
 576:	87 95       	ror	r24
 578:	96 95       	lsr	r25
 57a:	87 95       	ror	r24
 57c:	80 93 65 00 	sts	0x0065, r24	; 0x800065 <R5>
	R6 = number/100000;
 580:	ba 01       	movw	r22, r20
 582:	80 e0       	ldi	r24, 0x00	; 0
 584:	90 e0       	ldi	r25, 0x00	; 0
 586:	20 ea       	ldi	r18, 0xA0	; 160
 588:	36 e8       	ldi	r19, 0x86	; 134
 58a:	41 e0       	ldi	r20, 0x01	; 1
 58c:	50 e0       	ldi	r21, 0x00	; 0
 58e:	20 d0       	rcall	.+64     	; 0x5d0 <__divmodsi4>
 590:	20 93 64 00 	sts	0x0064, r18	; 0x800064 <R6>
 594:	08 95       	ret

00000596 <main>:
//-----------------------------------------//

int main(void)
{
	
	timer_ini(); 
 596:	c9 de       	rcall	.-622    	; 0x32a <timer_ini>
	
	DDRD=0xFF;
 598:	8f ef       	ldi	r24, 0xFF	; 255
 59a:	81 bb       	out	0x11, r24	; 17
	DDRB=0b00001111;
 59c:	8f e0       	ldi	r24, 0x0F	; 15
 59e:	87 bb       	out	0x17, r24	; 23
	DDRC=0b00011111;
 5a0:	9f e1       	ldi	r25, 0x1F	; 31
 5a2:	94 bb       	out	0x14, r25	; 20
	PORTD=0b00000000;
 5a4:	12 ba       	out	0x12, r1	; 18
	PORTB=0b00001111;
 5a6:	88 bb       	out	0x18, r24	; 24
	PORTC=0b00001111;
 5a8:	85 bb       	out	0x15, r24	; 21
	i=0;
 5aa:	10 92 6b 00 	sts	0x006B, r1	; 0x80006b <i+0x1>
 5ae:	10 92 6a 00 	sts	0x006A, r1	; 0x80006a <i>
	sei();
 5b2:	78 94       	sei
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 5b4:	88 e2       	ldi	r24, 0x28	; 40
 5b6:	8a 95       	dec	r24
 5b8:	f1 f7       	brne	.-4      	; 0x5b6 <main+0x20>
	

	_delay_us(15);
	ds3231_init();
 5ba:	05 de       	rcall	.-1014   	; 0x1c6 <ds3231_init>
 5bc:	88 e2       	ldi	r24, 0x28	; 40
 5be:	8a 95       	dec	r24
 5c0:	f1 f7       	brne	.-4      	; 0x5be <main+0x28>
	_delay_us(15);
	
	
	while (1)
	{
		ds3231_read_time(time);
 5c2:	81 e6       	ldi	r24, 0x61	; 97
 5c4:	90 e0       	ldi	r25, 0x00	; 0
 5c6:	19 de       	rcall	.-974    	; 0x1fa <ds3231_read_time>
		ledprint( time);
 5c8:	81 e6       	ldi	r24, 0x61	; 97
 5ca:	90 e0       	ldi	r25, 0x00	; 0
 5cc:	36 df       	rcall	.-404    	; 0x43a <ledprint>
 5ce:	f9 cf       	rjmp	.-14     	; 0x5c2 <main+0x2c>

000005d0 <__divmodsi4>:
 5d0:	05 2e       	mov	r0, r21
 5d2:	97 fb       	bst	r25, 7
 5d4:	16 f4       	brtc	.+4      	; 0x5da <__divmodsi4+0xa>
 5d6:	00 94       	com	r0
 5d8:	0f d0       	rcall	.+30     	; 0x5f8 <__negsi2>
 5da:	57 fd       	sbrc	r21, 7
 5dc:	05 d0       	rcall	.+10     	; 0x5e8 <__divmodsi4_neg2>
 5de:	20 d0       	rcall	.+64     	; 0x620 <__udivmodsi4>
 5e0:	07 fc       	sbrc	r0, 7
 5e2:	02 d0       	rcall	.+4      	; 0x5e8 <__divmodsi4_neg2>
 5e4:	46 f4       	brtc	.+16     	; 0x5f6 <__divmodsi4_exit>
 5e6:	08 c0       	rjmp	.+16     	; 0x5f8 <__negsi2>

000005e8 <__divmodsi4_neg2>:
 5e8:	50 95       	com	r21
 5ea:	40 95       	com	r20
 5ec:	30 95       	com	r19
 5ee:	21 95       	neg	r18
 5f0:	3f 4f       	sbci	r19, 0xFF	; 255
 5f2:	4f 4f       	sbci	r20, 0xFF	; 255
 5f4:	5f 4f       	sbci	r21, 0xFF	; 255

000005f6 <__divmodsi4_exit>:
 5f6:	08 95       	ret

000005f8 <__negsi2>:
 5f8:	90 95       	com	r25
 5fa:	80 95       	com	r24
 5fc:	70 95       	com	r23
 5fe:	61 95       	neg	r22
 600:	7f 4f       	sbci	r23, 0xFF	; 255
 602:	8f 4f       	sbci	r24, 0xFF	; 255
 604:	9f 4f       	sbci	r25, 0xFF	; 255
 606:	08 95       	ret

00000608 <__umulhisi3>:
 608:	a2 9f       	mul	r26, r18
 60a:	b0 01       	movw	r22, r0
 60c:	b3 9f       	mul	r27, r19
 60e:	c0 01       	movw	r24, r0
 610:	a3 9f       	mul	r26, r19
 612:	01 d0       	rcall	.+2      	; 0x616 <__umulhisi3+0xe>
 614:	b2 9f       	mul	r27, r18
 616:	70 0d       	add	r23, r0
 618:	81 1d       	adc	r24, r1
 61a:	11 24       	eor	r1, r1
 61c:	91 1d       	adc	r25, r1
 61e:	08 95       	ret

00000620 <__udivmodsi4>:
 620:	a1 e2       	ldi	r26, 0x21	; 33
 622:	1a 2e       	mov	r1, r26
 624:	aa 1b       	sub	r26, r26
 626:	bb 1b       	sub	r27, r27
 628:	fd 01       	movw	r30, r26
 62a:	0d c0       	rjmp	.+26     	; 0x646 <__udivmodsi4_ep>

0000062c <__udivmodsi4_loop>:
 62c:	aa 1f       	adc	r26, r26
 62e:	bb 1f       	adc	r27, r27
 630:	ee 1f       	adc	r30, r30
 632:	ff 1f       	adc	r31, r31
 634:	a2 17       	cp	r26, r18
 636:	b3 07       	cpc	r27, r19
 638:	e4 07       	cpc	r30, r20
 63a:	f5 07       	cpc	r31, r21
 63c:	20 f0       	brcs	.+8      	; 0x646 <__udivmodsi4_ep>
 63e:	a2 1b       	sub	r26, r18
 640:	b3 0b       	sbc	r27, r19
 642:	e4 0b       	sbc	r30, r20
 644:	f5 0b       	sbc	r31, r21

00000646 <__udivmodsi4_ep>:
 646:	66 1f       	adc	r22, r22
 648:	77 1f       	adc	r23, r23
 64a:	88 1f       	adc	r24, r24
 64c:	99 1f       	adc	r25, r25
 64e:	1a 94       	dec	r1
 650:	69 f7       	brne	.-38     	; 0x62c <__udivmodsi4_loop>
 652:	60 95       	com	r22
 654:	70 95       	com	r23
 656:	80 95       	com	r24
 658:	90 95       	com	r25
 65a:	9b 01       	movw	r18, r22
 65c:	ac 01       	movw	r20, r24
 65e:	bd 01       	movw	r22, r26
 660:	cf 01       	movw	r24, r30
 662:	08 95       	ret

00000664 <_exit>:
 664:	f8 94       	cli

00000666 <__stop_program>:
 666:	ff cf       	rjmp	.-2      	; 0x666 <__stop_program>
